<apex:page showHeader="false" standardStylesheets="false" controller="InvoicingLineCreation">
    <html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
        <head>
            <title>{!$Label.NewInvoicingLineCreation}</title>
            <link rel="icon" type="image/png" href="{!URLFOR($Resource.AlphaScaleLogo, 'logo_alpha_scale_without_name.png')}" />
            <apex:stylesheet value="{!URLFOR($Resource.slds, 'assets/styles/salesforce-lightning-design-system.min.css')}" />
            <apex:stylesheet value="{!URLFOR($Resource.ASPISOrderSite, 'css/site.css')}" />
            <script>
                window.params = {
                                    // URL For Icons
                                    "closeSVGUrl" : "{!URLFOR($Resource.slds, '/assets/icons/utility-sprite/svg/symbols.svg#close')}",
                                    "closePNGUrl" : "{!URLFOR($Resource.slds, '/assets/icons/action/close_60.png')}",
                                    "infoSVGUrl" : "{!URLFOR($Resource.slds, '/assets/icons/utility-sprite/svg/symbols.svg#info')}",
                                    "infoPNGUrl" : "{!URLFOR($Resource.slds, '/assets/icons/utility/info_60.png')}"
                                };
                var widgetId;
            </script>
            <apex:includescript value="https://www.google.com/recaptcha/api.js?render=explicit&hl={!$CurrentPage.Parameters.lang}"/>
            <style>
                .slds .slds-icon-success-utility {
                    height: 18px;
                    width: 18px;  
                }
            </style>
        </head>
        <body class="slds-scope">
            <apex:form id="InvOffCreationForm">
                <div class="slds">
                    <div class="slds-form-element">
                        <div class="slds-text-align_center slds-m-top_large">
                            <object data="{!URLFOR($Resource.AlphaScaleLogo, 'logo_alpha_scale.svg')}" 
                                    type="image/svg+xml"
                                    width="500"/>
                        </div>    
                        <div class="slds-grid slds-m-top_large">   
                            <div class="slds-col"></div>  

                            <div class="slds-col slds-m-bottom_large">   
                                <div class="slds-box">
                                    <h1 class="slds-text-heading_medium boldText slds-m-bottom_medium">{!$Label.NewInvoicingAdjustmentLineCreation}</h1>
                                    
                                    <div class="slds-form_compound">
                                        <div class="slds-form-element__row">
                                            <div class="slds-form-element slds-size--1-of-2">
                                                <label class="slds-form-element__label" for="name">{!$Label.InvoiceType} <em>*</em></label>
                                                <div class="slds-form-element__control">
                                                    <apex:selectList value="{!newInvoice.RecordTypeId}" size="1" styleclass="form-control slds-select invType requiredField"> 
                                                        <apex:selectOptions value="{!RecordTypes}"/>
                                                    </apex:selectList>  
                                                </div>
                                            </div>
                                            <div class="slds-form-element slds-size--1-of-2">
                                                <label class="slds-form-element__label" for="name">{!$Label.TotalAmountInvoice} <em>*</em></label>     
                                                <div class="slds-form-element__control">
                                                    <apex:inputfield id="lastName" styleClass="slds-input requiredField Amount" value="{!newOffer.AdjustmentAmount__c}" required="false" />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="slds-form-element__row">
                                            <div class="slds-form-element slds-size--1-of-2">
                                                <div class="popOverParent">         
                                                    <label class="slds-form-element__label" for="description">{!$Label.DescriptionInvoice} <em>*</em></label>        
                                                    <span class="slds-icon_container svgInfo">
                                                    </span>
                                                    <div class="slds-popover slds-popover_tooltip slds-nubbin_left popOverDiv-left" style="position:absolute;top:-10px; left: 130px;" role="tooltip">
                                                        <div class="slds-popover__body">
                                                            {!$Label.InvoicingDescription}
                                                        </div>                  
                                                    </div>   
                                                </div>            
                                                <div class="slds-form-element__control">
                                                    <apex:inputfield id="description" styleClass="slds-input requiredField" value="{!newOffer.AdjustmentDescription__c}" required="false" />
                                                </div>
                                            </div>
                                            <div class="slds-form-element slds-size--1-of-2">
                                                <div class="popOverParent">         
                                                    <label class="slds-form-element__label" for="username">{!$Label.CommentInvoice} <em>*</em></label>        
                                                    <span class="slds-icon_container svgInfo">
                                                    </span>
                                                    <div class="slds-popover slds-popover_tooltip slds-nubbin_left popOverDiv-left" style="position:absolute;top:-10px; left: 130px;" role="tooltip">
                                                        <div class="slds-popover__body">
                                                            {!$Label.InvoicingInternalComment}
                                                        </div>                  
                                                    </div>   
                                                </div>     
                                                <div class="slds-form-element__control">
                                                    <apex:inputtext id="username" styleClass="slds-input requiredField" value="{!newInvoice.CustomerNotes__c}" required="false" />
                                                </div> 
                                            </div>       
                                        </div>
                                        <div class="slds-form-element__row">
                                            <div class="slds-form-element slds-size--2-of-2 slds-align_absolute-center">
                                                <div class="slds-form-element__control">
                                                </div>
                                            </div>    
                                        </div>
                                        <div class="slds-form-element__row">
                                            <div class="slds-form-element slds-size--2-of-2 slds-align_absolute-center">
                                                <div class="slds-form-element__control">
                                                    <button class="slds-button slds-button_neutral slds-not-selected" type="button" onclick="validateForm();" >{!$Label.CreateInvoice} </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>  
                            <div class="slds-col"></div>
                        </div>
                        <apex:actionFunction action="{!createInvAndOffer}" name="createInvoicingLine" reRender="InvOffCreationForm" status="statusSpinner"/>
                    </div>
                </div>

                <div id="spinner"
                     class="slds-spinner_container hide positionFixed">
                    <div class="slds-spinner slds-spinner_large" aria-hidden="false" role="alert">
                        <div class="slds-spinner__dot-a"></div>
                        <div class="slds-spinner__dot-b"></div>
                    </div>
                </div>
                <apex:actionstatus onstart="$j('#spinner').show();" onstop="$j('#spinner').hide();" id="statusSpinner" />

                <div id="toastMessage" 
                    class="slds-notify_container slds-hide">
                    <div class="slds-notify slds-notify_toast slds-theme_error slds-grid_align-center" role="alert">
                        <button class="slds-button slds-notify__close slds-button_icon-inverse" 
                                title="{!$Label.Close}"
                                type="button"
                                onclick="hideError();">
                        </button>
                        <div class="slds-notify__content">
                            <p class="slds-text-align_center customErrorMsg"></p>
                            <apex:pagemessages id="toastErrorMessage" escape="false" />
                        </div>
                    </div>
                </div>

                <div id="errorModal"
                    class="slds-modal slds-modal_prompt"
                    aria-hidden="false"
                    role="dialog">
                    <div class="slds-modal__container">
                        <div class="slds-modal__header slds-theme_error slds-theme_alert-texture">
                            <h2 class="slds-text-heading_medium">{!$Label.ErrorModalHeader}</h2>
                        </div>
                        <div class="slds-modal__content slds-p-around_medium">
                            <apex:outputText rendered="{!!redirectionInErrorModal}">
                                <p class="slds-m-bottom_medium">
                                    {!$Label.ErrorModalBody}
                                </p>
                            </apex:outputText>
                            <p class="slds-text-align_center customErrorMsg"></p>
                            <apex:pagemessages escape="false" />
                        </div>
                        <div class="slds-modal__footer slds-theme_default">
                            <apex:outputText rendered="{!!redirectionInErrorModal}">
                                <input type="button"
                                    class="slds-button slds-button_destructive"
                                    value="{!$Label.Close}"
                                    onclick="hideError();" />
                            </apex:outputText>
                            <apex:outputText rendered="{!redirectionInErrorModal}">
                                <apex:commandButton action="{!redirectPage}" 
                                                    value="OK" 
                                                    styleClass="slds-button slds-button_destructive"
                                                    reRender="UserCreationForm" 
                                                    status="statusSpinner"/>
                            </apex:outputText>
                        </div>
                    </div>
                </div>
                <div id="errorModalBackdrop" class="slds-backdrop"></div>

                <apex:includescript value="{!URLFOR($Resource.jQueryDataTable, 'media/js/jquery.js')}" />
                <script>

                    if (typeof jQuery != 'undefined'){
                        $j = jQuery.noConflict();
                    }
                    renderCloseSVG();
                    renderInfoSVG();
                    var isUActive = false;
                    // console.log($j('.invType').val());        
                    // console.log('{!BSCreditNote}');
                    $j(".slds-popover").css('display','none');

                    $j(".svgInfo").hover
                    (
                        function()
                        {
                            showPopOver(this, false);
                        },   
                        function()
                        {
                            hidePopOver(this);      
                        }
                    );

                    function showPopOver(el, isInlineTable) {
                        if (isInlineTable) {
                            $j(el).next().css("display", "table");
                        } else {
                            $j(el).next().show();
                        }
                    }

                    function hidePopOver(el) {
                        $j(el).next().hide();
                    }

                    function validateForm()
                    {
                        console.log('validateForm');  

                        $j('#spinner').show();
                        hideError();
                        $j('.customErrorMsg').text('');
                        $j('[id$="toastErrorMessage"]').text('');

                        //  boolean to know if the form is valid or not 
                        var isValid = true;
                        var isNotNegative = true;
                        var issizeOK = true;
                       //console.log('isValid1 : '+isValid);

                        //loop in the required field to add/remove error
                        $j('.requiredField').each(function(index, el)
                        {
                            if(!$j(el).val())
                            {
                                isValid = false;
                                addError(el);
                            }
                            else
                            {
                                clearError(el);
                            }
                        });
                        //console.log('isValid2 : '+isValid);
                        
                        // If there are any requiredField empty stops validation  
                        if(!isValid)
                        {
                            $j('.customErrorMsg').text('{!JSENCODE($Label.FillEmptyFields)}');
                            showError(true, true);

                            $j('#spinner').hide();
                            return;
                        }

                        
                        if(('{!salesOrder.Status__c}' ==  'PREORDERCONFIRMED' || '{!salesOrder.Status__c}' ==  'INVOICED' || '{!salesOrder.Status__c}' ==  'CLOSEDOK') &&  $j('.Amount').val() < 0 ){
                            isNotNegative = false;
                        }
                        else if(('{!BSCreditNote}' == $j('.invType').val()) && ($j('.Amount').val() > {!totalInvoicesAmount})){
                            isNotNegative = false;
                        }
            
                        if(!isNotNegative)
                        {
                            $j('.customErrorMsg').text('{!JSENCODE($Label.InvoiceAmountNotNegative)}');
                            showError(true, true);

                            $j('#spinner').hide();
                            return;
                        }

                        if($j("[id$='description']").val().length > 35){
                            issizeOK = false;
                        }
            
                        if(!issizeOK)
                        {
                            $j('.customErrorMsg').text('{!JSENCODE($Label.InvoicingDescription)}');
                            showError(true, true);

                            $j('#spinner').hide();
                            return;
                        }

                        //console.log('isValid3 : '+isValid);
                        if(isValid && isNotNegative && issizeOK) 
                        {
                            createInvoicingLine();
                        }
                        
                    }

                    function displaySuccessError(result,event){

                        //console.log(event.status);
                        if(event.status){
                            window.open('/'+result,"_self");
                        }
                        else{
                           // console.log(event.message);
                            $j('.customErrorMsg').html(event.message);
                            showError(true, false);
                        }
                        $j('#spinner').hide();
                    }

                    function addError(el)
                    {
                        $j(el).parent().addClass("slds-has-error");
                    }

                    function clearError(el)
                    {
                        $j(el).parent().removeClass("slds-has-error");

                        hideError();
                    }

                    showError({!hasErrors}, {!isToastError});
                    checkPageMessage({!hasErrors});

                    function showError(hasErrors, isToastMessage) {
                        if (hasErrors) {
                            $j('.errorMsg').hide();
                            if (!isToastMessage) {
                                $j("#errorModal").addClass("slds-fade-in-open");
                                $j("#errorModalBackdrop").addClass("slds-backdrop_open");
                            } else {
                                $j("#toastMessage").show();
                            }
                        }
                    }

                    function hideError() {
                        $j("#errorModal").removeClass("slds-fade-in-open");
                        $j("#errorModalBackdrop").removeClass("slds-backdrop_open");

                        $j("#toastMessage").hide();
                    }

                    function checkPageMessage(hasErrors) {
                        if (!hasErrors) {
                            if ($j('[id$="toastErrorMessage"]').html() !== "") {
                                showError(true, true);
                            }
                        }
                    }
                    function renderCloseSVG() {
                        if ($j(".slds-notify__close").length > 0) {
                            var version = detectIE();

                            if (version === false || version > 11) {
                                var svgTag = $j("<svg/>", {
                                    "aria-hidden": "true",
                                    "class": "slds-button__icon slds-button__icon_large"
                                });

                                var useTag = $j("<use/>", {
                                    "xlink:href": window.params.closeSVGUrl
                                });

                                $j(".slds-notify__close").html(svgTag.append(useTag));
                            } else {
                                var imgTag = $j("<img/>", {
                                    "src": window.params.closePNGUrl,
                                    "class": "slds-button__icon slds-button__icon_large",
                                    "width": "24",
                                    "height": "24"
                                });

                                $j(".slds-notify__close").html(imgTag);
                            }

                            $j(".slds-notify__close").html($j(".slds-notify__close").html());
                        }
                    }


                    function renderInfoSVG() {
                        var version = detectIE();

                        if (version === false || version > 11) {
                            var svgTag = $j("<svg/>", {
                                "aria-hidden": "true",
                                class: "slds-icon slds-icon-success-utility slds-icon-text-default",
                                style: "fill: dodgerblue;"
                            });

                            var useTag = $j("<use/>", {
                                "xlink:href": window.params.infoSVGUrl
                            });

                            $j(".svgInfo").html(svgTag.append(useTag));
                        } else {
                            var imgTag = $j("<img/>", {
                                src: window.params.infoPNGUrl,
                                class: "slds-icon--small slds-icon-success-utility slds-icon-text-default"
                            });

                            $j(".svgInfo").html(imgTag);
                        }
                        $j(".svgInfo").html($j(".svgInfo").html());
                    }

                    function detectIE() {
                        var ua = window.navigator.userAgent;

                        // Test values; Uncomment to check result …

                        // IE 10
                        // ua = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';

                        // IE 11
                        // ua = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';

                        // Edge 12 (Spartan)
                        // ua = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';

                        // Edge 13
                        // ua = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2486.0 Safari/537.36 Edge/13.10586';

                        var msie = ua.indexOf('MSIE ');
                        if (msie > 0) {
                            // IE 10 or older => return version number
                            return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);
                        }

                        var trident = ua.indexOf('Trident/');
                        if (trident > 0) {
                            // IE 11 => return version number
                            var rv = ua.indexOf('rv:');
                            return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);
                        }

                        var edge = ua.indexOf('Edge/');
                        if (edge > 0) {
                            // Edge (IE 12+) => return version number
                            return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);
                        }

                        // other browser
                        return false;
                    }     
                </script>
            </apex:form>
        </body>
    </html>
</apex:page>