<!--
  @description       : 
  @author            : 
  @group             : 
  @last modified on  : 21-02-2023
  @last modified by  : RBE
-->
<apex:page controller="OrderMakeSelection" showHeader="false" sidebar="true" standardStylesheets="false" applyBodyTag="false" applyHtmlTag="false">
    <html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">

    <head>
        <title>{!$Label.OrderMakeSelectionTitle}</title>
        <link rel="icon" type="image/png" href="{!URLFOR($Resource.AlphaScaleLogo, 'logo_alpha_scale_without_name.png')}" />

        <apex:stylesheet value="{!URLFOR($Resource.slds, 'assets/styles/salesforce-lightning-design-system.min.css')}" />
        <apex:stylesheet value="{!URLFOR($Resource.jQueryDataTable, 'media/css/jquery.dataTables.css')}" />
        <apex:stylesheet value="{!URLFOR($Resource.MultiSwitch, 'multi-switch.min.css')}" />
        <apex:stylesheet value="{!URLFOR($Resource.ASPISOrderSite, 'css/site.css')}" />
        <apex:stylesheet value="{!URLFOR($Resource.ASPISOrderSite, 'css/ordermakeselection.css')}" />

        <!-- Initalise the global variable first as these values are used in the external javascript files -->
        <script>
            window.params = {
                // URL For Icons
                "closeSVGUrl": "{!URLFOR($Resource.slds, '/assets/icons/utility-sprite/svg/symbols.svg#close')}",
                "closePNGUrl": "{!URLFOR($Resource.slds, '/assets/icons/action/close_60.png')}",
                "attentionSVGUrl": "{!URLFOR($Resource.slds, '/assets/icons/utility-sprite/svg/symbols.svg#warning')}",
                "attentionPNGUrl": "{!URLFOR($Resource.PagedeCommandeResources, '/PagedeCommandeResources/warningOrdered.png')}",
                "alternativeSVGUrl": "{!URLFOR($Resource.slds, '/assets/icons/action-sprite/svg/symbols.svg#change_record_type')}",
                "alternativePNGUrl": "{!URLFOR($Resource.slds, '/assets/icons/action/change_record_type_60.png')}",
                "bundleSVGUrl": "{!URLFOR($Resource.slds, '/assets/icons/custom-sprite/svg/symbols.svg#custom57')}",
                "bundlePNGUrl": "{!URLFOR($Resource.slds, '/assets/icons/custom/custom57_60.png')}",
                "packageOrgSVGUrl": "{!URLFOR($Resource.slds, '/assets/icons/utility-sprite/svg/symbols.svg#package_org')}",
                "packageOrgPNGUrl": "{!URLFOR($Resource.slds, '/assets/icons/utility/package_org_60.png')}",
                "editFormSVGUrl": "{!URLFOR($Resource.slds, '/assets/icons/utility-sprite/svg/symbols.svg#edit_form')}",
                "editFormPNGUrl": "{!URLFOR($Resource.slds, '/assets/icons/utility/edit_form_60.png')}",
                "quickTextSVGUrl": "{!URLFOR($Resource.slds, '/assets/icons/utility-sprite/svg/symbols.svg#quick_text')}",
                "quickTextPNGUrl": "{!URLFOR($Resource.slds, '/assets/icons/utility/quick_text_60.png')}",
                "shipmentSVGUrl":"{!URLFOR($Resource.slds, '/assets/icons/standard-sprite/svg/symbols.svg#shipment')}",
                "shipmentPNGUrl":"{!URLFOR($Resource.shipmentGrey)}",
                "addressSVGUrl": "{!URLFOR($Resource.slds, '/assets/icons/utility-sprite/svg/symbols.svg#checkin')}",
                "addressPNGUrl": "{!URLFOR($Resource.slds, '/assets/icons/utility/checkin_60.png')}"

            };
        </script>

        <apex:includescript value="{!URLFOR($Resource.jQueryDataTable, 'media/js/jquery.js')}" />
        <apex:includescript value="{!URLFOR($Resource.jQueryDataTable, 'media/js/jquery.dataTables.js')}" />
        <apex:includescript value="{!URLFOR($Resource.CurrencyFormatter, 'JsWorld.min.js')}" />
        <apex:includescript value="{!URLFOR($Resource.CurrencyFormatter, 'fr_FR_EURO.js')}" />
        <apex:includescript value="{!URLFOR($Resource.MultiSwitch, 'multi-switch.js')}" />
        <apex:includescript value="{!URLFOR($Resource.ASPISOrderSite, 'js/icons.js')}" />
        <apex:includescript value="{!URLFOR($Resource.ASPISOrderSite, 'js/site.js')}" />
        <apex:includescript value="{!URLFOR($Resource.ASPISOrderSite, 'js/FileSaver.min.js')}" />
        <style>
            .searchDateButton {
                    background: #103184;
                    color: #fff;
                    font-size: 14px;
                    height: 32px;
            }
            .fixedHeader{
                position: fixed;
                width:100%;
                background: #fdfdfd;
                z-index:1;
            }
            
            .agencyLogo{
            width: 30px;
            height: 30px;
            margin-top: -5px;
            }
            
            .agencyLogoSection{
            width: 24px;
            height: 24px;
            margin-top: -5px;
            }
            .crstyle{
                right: 0px;
                position:absolute;
                top:42px
            }
            /*WCH 14/12/2018 C-002958: style should be only for spain*/
            .spainR4Style{
                height:78px;
                vertical-align:top;
            }
            /* RBE 12/01/2023 PREv2 Connected - Lot 3.6 */
            .occPagination{
                background: none;
                border: none;
                color: #0070d2;
                font-size: 1rem;
            }
            .occPagination:disabled{
                color: #16325c;
            }
        </style>
    </head>

    <body>
        <apex:form id="OrderMakeSelectionFrm">
            <div class="slds" style="min-width: 1300px;">
                <c:ASPISHeader />
                <!-- Order recap WCH 13/12/2018 C-002958 - MultiSourcing Belgium - Large choice of distributors for Bodyshops-->
                <div id="orderRecap" class="slds-hide" style="height: 100%;position: absolute;top: 25%;right: 0;bottom: 0;left: 0;">
                    <section role="dialog" tabindex="-1" class="slds-modal slds-fade-in-open slds-modal_large" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1">
                        <div class="slds-modal__container" style="z-index: 100000;">
                            <div class="slds-modal__header">
                                <h2 id="modal-heading-01" class="slds-text-heading_medium slds-hyphenate">{!$Label.popUpTitle}<input id="focusNode" style="width: 0px;opacity: 0;"/></h2>
                            </div>
                            
                            <div class="slds-modal__content slds-p-around_medium" id="modal-content-id-1">
                                
                            </div>

                            <div class="slds-modal__footer slds-text-align_center">
                                <strong><apex:outputtext >{!$Label.popUpButtonQuestion}</apex:outputtext></strong><br/><br/>

                                <input type="button"
                                        id="respBtn"
                                        class="slds-button slds-button_brand"
                                        value="{!$Label.popUpButtonYes}"
                                        onclick="respondOrder();"/>
                                <input type="button"
                                        class="slds-button slds-button_neutral"
                                        value="{!$Label.popUpButtonNo}"
                                        onclick="exitRecap();"/>
                            </div>
                        </div>
                    </section>

                    <div class="slds-backdrop slds-backdrop_open"></div>
                </div>
                <!-- WCH 08/04/2020 C-003677 -->
                <div id="cancellationReason" class="slds-hide" style="height: 100%;position: absolute;top: 5%;right: 0;bottom: 0;left: 0;">
                    <section role="dialog" tabindex="-1" class="slds-modal slds-fade-in-open slds-modal_large" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1">
                        <div class="slds-modal__container" style="z-index: 100000;">
                            <div class="slds-modal__header">
                                <h2 id="modal-heading-01" class="slds-text-heading_medium slds-hyphenate">{!$Label.ConfirmCancellationReasonTitle}<input id="focusNodeCancelReason" style="width: 0px;opacity: 0;"/></h2>
                            </div>
                            
                            <div class="slds-modal__content slds-p-around_medium" id="modal-content-id-1">
                                <apex:outputText value="{!$Label.IndicateReason} "/><apex:inputField value="{!shadowSO.CancelationReason__c}" />
                            </div>

                            <div class="slds-modal__footer slds-text-align_center">
                                <strong><apex:outputtext >{!$Label.popUpButtonQuestion}</apex:outputtext></strong><br/><br/>
                                <input type="button"
                                        id="saveCancelReasonBtn"
                                        class="slds-button slds-button_brand"
                                        value="{!$Label.ModalOK}"
                                        onclick="saveCancelReason();"/>
                                <input type="button"
                                        class="slds-button slds-button_neutral"
                                        value="{!$Label.popUpButtonNo}"
                                        onclick="exitCancelReason();"/>
                            </div>
                        </div>
                    </section>
                    <div class="slds-backdrop slds-backdrop_open"></div>
                </div>
                <!-- WCH 22/06/2022 C-004697 -->
                <div id="multiadress" class="slds-hide" style="height: 100%;position: absolute;top: 5%;right: 0;bottom: 0;left: 0;">
                    <section role="dialog" tabindex="-1" class="slds-modal slds-fade-in-open slds-modal_large" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1">
                        <div class="slds-modal__container" style="z-index: 100000;width:90%;max-width:70rem;">
                            <div class="slds-modal__header">
                                <h2 id="modal-heading-01" class="slds-text-heading_medium slds-hyphenate">{!$Label.multiAddressTitle}<input id="focusNodeMultiaddress" style="width: 0px;opacity: 0;"/></h2>
                            </div>
                            
                            <div class="slds-modal__content slds-p-around_medium" id="modal-content-id-1">
                                <table class="slds-table slds-table_bordered">
                                    <thead>
                                        <tr>
                                            <th class="slds-text-heading_label"></th>
                                            <th class="slds-text-heading_label">{!$ObjectType.Contact.fields.RepairCenterCode__c.label}</th>
                                            <th class="slds-text-heading_label">Garage</th>
                                            <th class="slds-text-heading_label">Addresse</th>
                                            <th class="slds-text-heading_label">Code Postale</th>
                                            <th class="slds-text-heading_label">Ville</th>
                                        </tr>
                                    </thead>
                                        <tbody class="hoverParentAndChild">
                                            <apex:repeat value="{!lstAllBSAddresses}" var="currentAddress">
                                                <tr>
                                                    <td class="slds-text-body_regular slds-cell-wrap"><input type="radio" name="selectedMA" value="{!currentAddress.theContact.Id}" onclick="selectThisMA(this.value);"/>
                                                        <!-- <apex:inputCheckbox value="{!currentAddress.selected}"/ --></td>
                                                    <td class="slds-text-body_regular slds-cell-wrap">{!currentAddress.theContact.RepairCenterCode__c}</td>
                                                    <td class="slds-text-body_regular slds-cell-wrap">{!currentAddress.theContact.Account.Name}</td>
                                                    <td class="slds-text-body_regular slds-cell-wrap">{!currentAddress.theContact.MailingStreet}, {!currentAddress.theContact.MailingCity}, {!currentAddress.theContact.MailingState},{!currentAddress.theContact.MailingCountry}</td>
                                                    <td class="slds-text-body_regular slds-cell-wrap">{!currentAddress.theContact.MailingPostalcode}</td>
                                                    <td class="slds-text-body_regular slds-cell-wrap">{!currentAddress.theContact.MailingCity}</td>
                                                </tr>
                                            </apex:repeat>
                                            <apex:outputText rendered="{!lstAllBSAddresses.size<1}">
                                                <tr><td class="slds-text-heading_label slds-text-align_center" colspan="6">{!$Label.DataTableEmptyTable}</td></tr>
                                            </apex:outputText>
                                        </tbody>
                                    </table>
                                            
                            </div>

                            <div class="slds-modal__footer slds-text-align_center">
                                <strong><apex:outputtext rendered="{!lstAllBSAddresses.size>0}">{!$Label.popUpButtonQuestion}</apex:outputtext></strong><br/><br/>

                                <input type="button"
                                        id="respMABtn"
                                        class="slds-button slds-button_brand {!IF(lstAllBSAddresses.size<1,'slds-hide','')}"
                                        value="{!$Label.selectmultiaddress}"
                                        onclick="setAddressDeLivraison();"/>
                                <input type="button"
                                        class="slds-button slds-button_neutral"
                                        value="{!$Label.popUpButtonNo}"
                                        onclick="exitMultiAddress();"/>
                            </div>
                        </div>
                    </section>
                    <div class="slds-backdrop slds-backdrop_open"></div>
                </div>
                <!-- RBE 04/01/2023 PREv2 Connected - Lot 3.5 - Order - Display Occurence Page C-004899-->
                <!-- Modal for list of occurences associated with xref -->
                <apex:outputPanel id="occurenceList" layout="block" styleClass="slds-hide" style="height: 100%;position: absolute;top: 5%;right: 0;bottom: 0;left: 0;">
                    <section role="dialog" tabindex="-1" class="slds-modal slds-fade-in-open slds-modal_large" aria-labelledby="modal-heading-02" aria-modal="true" aria-describedby="modal-content-id-2">
                        <div class="slds-modal__container" style="z-index: 100000;width:90%;max-width:70rem;">
                            <div class="slds-modal__header">
                                <h2 id="modal-heading-02" class="slds-text-heading_medium slds-hyphenate"> 
                                    {!xrefDesc}
                                </h2>
                            </div>
                            <div class="slds-modal__content slds-p-around_medium" id="modal-content-id-2">
                                <apex:outputPanel rendered="{!!mapOccEmpty}">
                                    <table class="slds-table slds-table_bordered">
                                        <thead>
                                            <tr>
                                                <th class="slds-text-heading_label">{!$ObjectType.Occurence__c.fields.Color__c.label}</th>
                                                <th class="slds-text-heading_label">{!$ObjectType.Occurence__c.fields.Distributor__c.label}</th>
                                                <th class="slds-text-heading_label">{!$ObjectType.Occurence__c.fields.Quality__c.label}</th>
                                                <th class="slds-text-heading_label">{!$ObjectType.Occurence__c.fields.ASSellingNetPrice__c.label}</th>
                                                <th class="slds-text-heading_label">{!$ObjectType.Occurence__c.fields.Brand__c.label}</th>
                                                <th class="slds-text-heading_label">{!$ObjectType.Occurence__c.fields.Delay__c.label}</th>
                                                <th class="slds-text-heading_label">{!$ObjectType.Occurence__c.fields.CutOff__c.label}</th>
                                                <th class="slds-text-heading_label">Apercu</th>
                                                <th class="slds-text-heading_label">Selection</th>
                                            </tr>
                                        </thead>
                                            <tbody class="hoverParentAndChild">
                                                <apex:repeat value="{!mapOcc}" var="occKey">                                            
                                                    <apex:variable var="occWrap" value="{!mapOcc[occKey]}"/>  
                                                    <tr id="occ-{!occWrap.occ.Id}"> 
                                                        <td class="slds-text-body_regular slds-cell-wrap">{!occWrap.occ.Color__c}</td>
                                                        <td class="slds-text-body_regular slds-cell-wrap">{!occWrap.occ.Distributor__r.Name}</td>
                                                        <td class="slds-text-body_regular slds-cell-wrap">{!occWrap.occ.Quality__c}</td>
                                                        <td class="slds-text-body_regular slds-cell-wrap">{!occWrap.occ.ASSellingNetPrice__c}</td>
                                                        <td class="slds-text-body_regular slds-cell-wrap">{!occWrap.occ.Brand__c}</td>
                                                        <td class="slds-text-body_regular slds-cell-wrap">{!occWrap.occ.Delay__c}</td>
                                                        <td class="slds-text-body_regular slds-cell-wrap">{!occWrap.occ.CutOff__c}</td>                                                   
                                                        <td class="slds-text-body_regular slds-cell-wrap">                                                       
                                                                <apex:commandButton action="{!setDetailOcc}" 
                                                                                    rerender="OrderMakeSelectionFrm"    
                                                                                    status="statusSpinner" 
                                                                                    oncomplete="toggleOccurenceDetailModal();"                                                                             
                                                                                    styleClass="slds-button btnOccurencedetail"
                                                                                    image="{!occWrap.mainImage}"
                                                                                    style="height : 4rem;"
                                                                                    alt="No image">
                                                                    <apex:param name="firstParam" assignTo="{!detailOccId}" value="{!occWrap.occ.Id}"/>
                                                                </apex:commandButton>
                                                        </td>
                                                        <!-- checkOccurenceCheckBox('{!occWrap.occ.Id}','{!xrefId}') -->
                                                        <td class="slds-text-body_regular slds-cell-wrap">                                                      
                                                            <div class="slds-checkbox_add-button" style="display:inline-block;position: relative;" onclick="checkOccurenceCheckBox('{!occWrap.occ.Id}','{!xrefId}')">
                                                                <input type="checkbox" class="slds-assistive-text occCheckbox-{!xrefId}"/>
                                                                <label class="slds-checkbox_faux" for="check1"></label> 
                                                            </div>
                                                            
                                                        </td> 
                                                    </tr>                                               
                                                </apex:repeat>     
                                            </tbody>
                                    </table>
                                    <!-- Pagination -->
                                    <div class="slds-text-align_center slds-m-top_xx-small">
                                        <apex:commandButton value="First" action="{!firstOcc}" disabled="{!occOffset== 0}" reRender="occurenceList" oncomplete="toggleOccurenceListModal()" status="statusSpinner" 
                                            styleClass="occPagination slds-border_right"/>

                                        <apex:commandButton value="Previous" action="{!prevOcc}" disabled="{!occOffset== 0}" reRender="occurenceList" oncomplete="toggleOccurenceListModal()" status="statusSpinner" 
                                            styleClass="occPagination slds-border_right"/>

                                        <apex:commandButton value="Next" action="{!nextOcc}" disabled="{!(occOffset + occLimit) >= noOccurences}" reRender="occurenceList" oncomplete="toggleOccurenceListModal()" status="statusSpinner"
                                            styleClass="occPagination" />

                                        <apex:commandButton value="Last" action="{!lastOcc}" disabled="{!(occOffset + occLimit) >= noOccurences}" reRender="occurenceList" oncomplete="toggleOccurenceListModal()" status="statusSpinner"
                                            styleClass="occPagination" />                                    
                                    </div>
                                    <div class="slds-text-align_center slds-m-top_xx-small" style="font-size:1rem">
                                        <apex:outputText styleClass="slds-text-align_center" value="Page {!(occOffset/occLimit) + 1} of {!CEILING(noOccurences/occLimit)}"/>
                                    </div>
                                </apex:outputPanel>
                                <apex:outputText styleClass="slds-text-heading_medium slds-hyphenate slds-align_absolute-center" rendered="{!mapOccEmpty}" value="Pas de pièces disponibles"></apex:outputText>
                            </div>
                            <div class="slds-modal__footer slds-text-align_center">
                                <input type="button"
                                        id="btnOccurenceSelect"
                                        class="slds-button slds-button_brand"
                                        value="{!$Label.Select}"
                                        onclick="selectOccurence('{!xrefId}')"
                                        disabled="disabled"/>
                                <input type="button"
                                        class="slds-button slds-button_neutral"
                                        value="{!$Label.popUpButtonNo}"
                                        onclick="toggleOccurenceListModal()"/>
                            </div>
                        </div>
                    </section>
                    <div class="slds-backdrop slds-backdrop_open"></div>
                </apex:outputPanel>

                <!-- RBE 04/01/2023 PREv2 Connected - Lot 3.6 - Order - Occurrence Additional Information  C-004900-->
                <!-- Modal for additional information -->
                <apex:outputPanel id="occurenceDetails" layout="block" styleClass="slds-hide" style="position: absolute;top: 5%;right: 0;bottom: 0;left: 0;">
                    <section role="dialog" tabindex="-1" class="slds-modal slds-fade-in-open slds-modal_large" aria-labelledby="modal-heading-03" aria-modal="true" aria-describedby="modal-content-id-3">
                        <div class="slds-modal__container" style="z-index: 100000;width:90%;max-width:70rem;">
                            <div class="slds-modal__header">
                                <h2 id="modal-heading-03" class="slds-text-heading_medium slds-hyphenate"> 
                                    {!xrefDesc}                                  
                                </h2>
                            </div>
                            <div class="slds-modal__content slds-p-around_medium" id="modal-content-id-2">
                                <div class="slds-grid slds-gutters slds-grid_align-space ">
                                    <apex:outputText rendered="{!detailOcc.lstImages != null}">
                                        <!-- Images -->
                                        <div class="slds-col" style="min-width:9%;">
                                            <apex:repeat value="{!detailOcc.lstImages}" var="image" rendered="{!detailOcc.lstImages != null}">
                                                    <div class="occurence-image"> 
                                                        <apex:image url="{!image}" height="75" width="75"/> 
                                                    </div>
                                            </apex:repeat>  
                                        </div>
                                        <div class="slds-col slds-size_1-of-2 slds-border_right">
                                            <!-- Main image -->
                                            <div id="main-occurence-image" class="slds-m-around_small">
                                                <apex:image url="{!detailOcc.lstImages[0]}" height="500" width="500" rendered="{!detailOcc.mainImage != null}"/>
                                            </div>                                            
                                        </div>
                                    </apex:outputText>
                                    <apex:outputText rendered="{!detailOcc.lstImages == null}">
                                        <span class="slds-text-heading_label slds-text-align_center">Images non trouvées</span> 
                                    </apex:outputText>
                                    <!-- Text information -->
                                    <div class="slds-col slds-size_1-of-2 slds-wrap slds-p-around_small">
                                        <h2 class="slds-text-heading_medium slds-hyphenate "> 
                                            <strong>Informations supplémentaires</strong>
                                        </h2>
                                        <!-- <div class="slds-grid slds-grid_align-space slds-p-around_small">                                            
                                            <div class="slds-col">
                                                <span class="carSVG"></span> {!detailOcc.occ.Brand__c} {!detailOcc.mapAdditionalInfo['Modele']}
                                                <br/>
                                                <span class="energySVG"></span> Go
                                            </div>
                                            <div class="slds-col">
                                                <span class="meterSVG"></span> {!detailOcc.mapAdditionalInfo['Kilometrage']} 
                                                <br/>
                                                <span class="doorSVG"></span> {!detailOcc.mapAdditionalInfo['Carrosserie']}
                                                <br/>
                                                <span class="calendarSVG"></span> {!detailOcc.mapAdditionalInfo['Année']} 
                                            </div>
                                        </div> -->
                                       <div class="slds-p-around_small">
                                            <apex:outputText rendered="{!detailOcc.mapAdditionalInfo != null}">
                                                <ul class="slds-list_dotted">
                                                    <apex:repeat value="{!detailOcc.lstInfoKeys}" var="infoKey">
                                                        <li>{!infoKey} : {!detailOcc.mapAdditionalInfo[infoKey]}</li>
                                                    </apex:repeat> 
                                                </ul>
                                            </apex:outputText>
                                            <apex:outputText rendered="{!detailOcc.mapAdditionalInfo == null}">
                                                <span class="slds-text-heading_small">Informations non trouvées</span>
                                            </apex:outputText>
                                            
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="slds-modal__footer slds-text-align_center">
                                <input type="button"
                                        id="btnSelect"
                                        class="slds-button slds-button_brand"
                                        value="{!$Label.Select}"
                                        onclick="checkOccurenceCheckBox('{!detailoccId}');toggleOccurenceDetailModal()"/>
                                <input type="button"
                                        class="slds-button slds-button_neutral"
                                        value="{!$Label.popUpButtonNo}"
                                        onclick="toggleOccurenceDetailModal()"/>
                            </div>
                        </div>
                    </section>
                    <div class="slds-backdrop slds-backdrop_open"></div>
                </apex:outputPanel>
                <!-- RBE Fullscreen image modal -->
                <div id="fullscreen-modal" class="slds-hide" style="height: 100%;position: absolute;top: 5%;right: 0;bottom: 0;left: 0;">
                    <section role="dialog" tabindex="-1" class="slds-modal slds-fade-in-open slds-modal_large" aria-labelledby="modal-heading-04" aria-modal="true" aria-describedby="modal-content-id-4">
                        <div id="fullscreen-image" class="slds-modal__container" style="z-index: 100000;width:100%;max-width:100%">
                            <span id="btnCloseFullscreen" class="slds-notify__close" style="position:sticky;top:1rem;left:1rem;width:fit-content;color:white"></span>
                            <div class="slds-align_absolute-center">
                                <apex:image url="{!URLFOR($Resource.OccurenceDoor, 'OccurenceDoor/door1/1.jpg')}" height="100%" width="100%"/>                        
                            </div>                            
                        </div>
                    </section>
                    <div class="slds-backdrop slds-backdrop_open" style="background:rgba(14, 21, 27, 0.822)"></div>
                </div>

                <div class="slds-card" id="topCard">
                    <div class="slds-card__header">
                        <h2 class="slds-text-heading_small">
                            <!-- <apex:commandbutton action="{!back}" value="{!$Label.Back}" styleclass="searchDateButton slds-button slds-button_brand" rerender="OrderMakeSelectionFrm" status="statusSpinner" /> &nbsp;&nbsp;  -->
                            {!assessmentTitle}
                            <!-- WCH 01/04/2020 C-003677 -->
                            <apex:outputtext rendered="{!showBSCancelSOButton}">
                                <input type="button"
                                    class="slds-button slds-button_brand slds-float_right slds-m-bottom--small"
                                    value="{!$Label.CancelSOButtonForBS}"
                                    Id="CancelSOButtonForBS"/> 
                            </apex:outputtext>
                        </h2>
                    </div>
                    <div class="slds-card__body">
                        <apex:outputText rendered="{!currentClaimAssessment != null}">
                            <table class="slds-table slds-table_bordered">
                                <thead>
                                    <tr>
                                        <th class="slds-text-heading_label slds-text-align_center">
                                            {!$ObjectType.Assessment__c.fields.PlateNumber2__c.label}
                                        </th>
                                        <th class="slds-text-heading_label slds-text-align_center">
                                            {!$ObjectType.Assessment__c.fields.VINNumber__c.label}
                                        </th>
                                        <th class="slds-text-heading_label slds-text-align_center">
                                            {!$Label.Brand}
                                        </th>
                                        <th class="slds-text-heading_label slds-text-align_center">
                                            {!$ObjectType.Assessment__c.fields.ModelV2__c.label}
                                        </th>
                                        <th class="slds-text-heading_label slds-text-align_center">
                                            <!--DUN 16/03/2018 Added MissionNumber for BE-->
                                            <apex:outputText rendered="{!currentClaimAssessment.TECH_EntityCountryCode__c != 'BE'}">
                                                {!$ObjectType.Assessment__c.fields.ClaimReference__c.label}
                                            </apex:outputText>
                                            <apex:outputText rendered="{!currentClaimAssessment.TECH_EntityCountryCode__c == 'BE'}">
                                                {!$ObjectType.Assessment__c.fields.MissionNumber__c.label}
                                            </apex:outputText>
                                        </th>
                                        <th class="slds-text-heading_label slds-text-align_center">
                                            {!$ObjectType.Assessment__c.fields.ASReference__c.label}
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td class="slds-text-body_regular slds-text-align_center">
                                            {!currentClaimAssessment.PlateNumber2__c}
                                        </td>
                                        <td class="slds-text-body_regular slds-text-align_center">
                                            {!currentClaimAssessment.VINNumber__c}
                                        </td>
                                        <td class="slds-text-body_regular slds-text-align_center">
                                            {!currentClaimAssessment.Manufacturer__c}
                                        </td>
                                        <td class="slds-text-body_regular slds-text-align_center">
                                            {!currentClaimAssessment.ModelV2__c}
                                        </td>
                                        <td class="slds-text-body_regular slds-text-align_center">
                                            <!--DUN 16/03/2018 Added MissionNumber for BE-->
                                            <apex:outputText rendered="{!currentClaimAssessment.TECH_EntityCountryCode__c != 'BE'}">
                                                {!currentClaimAssessment.ClaimReference__c}
                                            </apex:outputText>
                                            <apex:outputText rendered="{!currentClaimAssessment.TECH_EntityCountryCode__c == 'BE'}">
                                                {!currentClaimAssessment.MissionNumber__c}
                                            </apex:outputText>
                                        </td>
                                        <td class="slds-text-body_regular slds-text-align_center">
                                            <strong>{!currentClaimAssessment.ASReference__c}</strong>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </apex:outputText>
                    </div>
                </div>

                <div class="slds-p-around_medium">
                    <apex:outputText rendered="{!doesAssessmentHaveOffers}">
                        <apex:variable value="{!0}" var="noOfParts" />
                        <apex:variable value="{!0}" var="noOfSelectedParts" />
                        <div class="slds-card">
                            <div class="slds-card__header" style="padding-right: 1.7rem;"><!-- WCH 28/01/2019 C-002963 - Select/Unselect ALL on R4 Order page set to 1.7rem for alignment-->
                                <div class="slds-size--1-of-2" style="display:inline-block;"><!-- WCH 28/01/2019 C-002963 - Select/Unselect ALL on R4 Order page -->
                                    <h2 class="slds-text-heading_small">{!$Label.ChooseDistributors}</h2>
                                </div>
                                <div class="slds-size--1-of-2 slds-p-bottom_small" style="{!IF(toggleButtonVisible,'float:right;','display:none;')}"><!-- WCH 28/01/2019 C-002963 - Select/Unselect ALL on R4 Order page -->
                                    <div class="slds-form-element">
                                        <div class="slds-float--right slds-form-element__control">
                                            <div class="slds-checkbox_add-button">
                                                <input type="checkbox" class="slds-assistive-text" id="toggleAllSelects" value="{!toggleValue}" />
                                                <label class="slds-checkbox_faux" for="toggleAllSelects"></label>
                                                <span class="slds-form-element__label" style="float:left;">{!$label.SelectDeselectAll}</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="slds-card__body">
                                <table class="slds-table slds-table_bordered">
                                    <thead>
                                        <tr>
                                            <th colspan="2" class="slds-text-heading_label">
                                                {!$ObjectType.PartList__c.fields.PartNumber__c.label}
                                            </th>
                                            <th class="slds-text-heading_label slds-text-align_left">
                                                {!$ObjectType.PartList__c.fields.Description__c.label}
                                            </th>
                                            <th class="slds-text-heading_label  slds-text-align_left">
                                                {!$ObjectType.PurchaseOrder__c.fields.DistributorName__c.label}
                                            </th>
                                           <!--  <th class="slds-text-heading_label slds-text-align_center">
                                                {!$Label.Type}
                                            </th> --><!--VSU -->
                                            <th class="slds-text-heading_label slds-text-align_center">
                                                {!$Label.Price}
                                            </th>
                                            <th class="slds-text-heading_label slds-text-align_center">
                                                {!$Label.BS}
                                            </th>
                                            <th class="slds-text-heading_label slds-text-align_center">
                                                {!$Label.PriceWithDiscount}
                                            </th>
                                            <th class="slds-text-heading_label slds-text-align_center">
                                                {!$ObjectType.PartList__c.fields.Quantity__c.label}
                                            </th>
                                            <th colspan="2" class="slds-text-heading_label slds-text-align_center">
                                                {!$Label.Delivery}
                                            </th>
                                            <th colspan="2" class="slds-text-heading_label slds-text-align_center">
                                                {!$Label.Select}
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody class="hoverParentAndChild">
                                        <apex:repeat value="{!mapPartWrapper}" var="partId">
                                            <apex:variable var="counter" value="{!0}"/> 
                                            <apex:variable value="{!IF(currentClaimOrderAssessment.OrderOrigin__c == 'Order' || (currentClaimOrderAssessment.OrderOrigin__c == 'Quotation' && mapPartWrapper[partId].isPartAvailable), noOfParts + 1, noOfParts)}" var="noOfParts" />                                               
                                            <apex:repeat value="{!mapPartWrapper[partId].orderedDistIds}" var="distributorId"><apex:variable value="{!counter+1}" var="counter"/>   
                                                <!-- DUN 22/11/2017 do not display additional part-->
                                                <apex:repeat value="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper}" var="parentOfferId">
                                                    <!-- RBE 20/01/2023 -->
                                                    <apex:variable var="isPREByAlphascale" value="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].currentDistributor.Name == 'PRE By AlphaScale'}"/>
                                                    <apex:outputText rendered="{!(mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.PartNUmber__c != $Label.AdditionalPartNumber)}">     
                                                        <!-- WCH 09/01/2019 C-002958 - MultiSourcing Belgium - Large choice of distributors for Bodyshops
                                                        <apex:variable value="{!IF(currentClaimOrderAssessment.OrderOrigin__c == 'Order' || (currentClaimOrderAssessment.OrderOrigin__c == 'Quotation' && mapPartWrapper[partId].isPartAvailable), noOfParts + 1, noOfParts)}" var="noOfParts" /> -->                                               
                                                    
                                                        <!-- AMI 19/09/17 -->
                                                        <!-- <apex:variable value="{!IF(

                                                        (mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].isAccepted &&

                                                        !(mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c != 'CONFIRMED' &&

                                                        mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c != 'CONFIRMEDWITHDELAY' &&

                                                        mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&

                                                        mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == ''))

                                                        , noOfSelectedParts + 1, noOfSelectedParts)

                                                        }" var="noOfSelectedParts" /> -->

                                                        <apex:variable value="{!IF(

                                                        (mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].isAccepted &&

                                                        !(!(contains(mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.Distributor__r.Tech_OrderNF__c,mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c)) &&

                                                        mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&

                                                        mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == ''))

                                                        , noOfSelectedParts + 1, noOfSelectedParts)

                                                        }" var="noOfSelectedParts" />

                                                        <!-- AMI 06/11/18  C-002781 : Migrate Spain to R4 
                                                                                    : Adding new style attibute -->
                                                        <tr class="rowId-{!parentOfferId} {!IF(currentClaimAssessment.TECH_EntityCountryCode__c==countryCode,'spainR4Style','')}" > <!-- WCH 13/12/2018 C-002958 - style should be applied only for ES -->
                                                            <!-- Part Number -->
                                                            
                                                            <td colspan="2" class="slds-text-body_regular">                                                      
                                                                <apex:outputtext rendered="{!AND(!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].isOfferOriginal,counter==1)}"><!-- WCH 13/12/2018 C-002958 - MultiSourcing Belgium - Large choice of distributors for Bodyshops -->
                                                                    {!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.PartNumber__c}
                                                                </apex:outputtext>
                                                                <apex:outputtext rendered="{!AND(mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].isOfferOriginal,counter==1)}"><!-- WCH 13/12/2018 C-002958 - MultiSourcing Belgium - Large choice of distributors for Bodyshops -->
                                                                    {!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OriginalPartNumber__c}
                                                                </apex:outputtext>
                                                            </td>
                                                            <!-- Description -->
                                                            <td class="slds-text-body_regular slds-cell-wrap slds-truncate slds-size_small">
                                                                <apex:outputtext rendered="{!!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].isOfferOriginal}">
                                                                    <span title="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.Description__c}">
                                                                        {!IF(counter==1,mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.Description__c,'')}<!-- WCH 13/12/2018 C-002958 - MultiSourcing Belgium - Large choice of distributors for Bodyshops -->
                                                                    </span>
                                                                </apex:outputtext>
                                                                <apex:outputtext rendered="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].isOfferOriginal}">
                                                                    <span title="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OriginalDescription__c}">
                                                                        {!IF(counter==1,mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OriginalDescription__c,'')}<!-- WCH 13/12/2018 C-002958 - MultiSourcing Belgium - Large choice of distributors for Bodyshops -->
                                                                    </span>
                                                                </apex:outputtext>
                                                            </td>
                                                            <!-- Distributor Name -->
                                                            <td class="slds-text-body_regular">
                                                                <apex:outputText rendered="{! !(mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].isOfferAlternative ||
                                                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].isBundle)}">

                                                                    <!-- <div class="popOverParent"> -->
                                                                    <!--DUN 10/01/2018  C-002135 agency Mode V2-->  
                                                                    <apex:outputText rendered="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.AgencyMode__c}">
                                                                         <span class="popOver">
                                                                                <apex:image url="{!$Resource.AgencyLogo}" styleclass="agencyLogo"/>        
                                                                            <div class="slds-popover slds-popover_tooltip slds-nubbin_left popOverDiv-left" style="top: 21%; left: 50px; background: rgb(57, 137, 201);"
                                                                                role="tooltip">
                                                                                <div class="slds-popover__body">
                                                                                    {!$Label.AgencyDistributor}
                                                                                </div>
                                                                            </div>
                                                                        </span>  
                                                                    </apex:outputText>
                                                                        <!-- RBE 10/01/2023 PREv2 Connected - Lot 3.3 - Order - Order Page (Frontend)-->
                                                                        <!-- Button to fetch the occurences associated with the xref and display the modal -->
                                                                        <apex:commandButton rendered="{!mapPartWrapper[partId].currentPart.CrossReferenceId__c != null && mapPartWrapper[partId].currentPart.CrossReferenceId__r.Connected__c}"
                                                                                            action="{!getOccurences}" 
                                                                                            value="{!IF(isPREByAlphascale, $Label.ChooseOccurence, $Label.ChangeOccurence)}" 
                                                                                            status="statusSpinner"
                                                                                            reRender="OrderMakeSelectionFrm"
                                                                                            oncomplete="toggleOccurenceListModal()"
                                                                                            styleClass="slds-button slds-button_brand"
                                                                                            style="padding:0.25rem; line-height:1.5rem">
                                                                            <apex:param name="xrefIdParam" assignTo="{!xrefId}" value="{!mapPartWrapper[partId].currentPart.CrossReferenceId__c}"/>
                                                                            <apex:param name="xrefDescParam"  assignTo="{!xrefDesc}" value="{!mapPartWrapper[partId].currentPart.Description__c}"/>  
                                                                            <apex:param name="occPart" assignTo="{!occPartId}" value="{!partId}"/>
                                                                            <apex:param name="occDist" assignTo="{!occDistId}" value="{!distributorId}"/>
                                                                            <apex:param name="occOffer" assignTo="{!occOfferId}" value="{!parentOfferId}"/>        
                                                                            <apex:param name="operation" assignTo="{!occOperation}" value="{!IF(isPREByAlphascale,'create','change')}"/>                                                                                  
                                                                        </apex:commandButton>
                                                                        <apex:outputText rendered="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].hasTermsAndCondition}">
                                                                            <span class="slds-text-link slds-text-link_reset" onclick="downloadTermsAndCondition('{!distributorId}', '{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].currentDistributor.Name}');">
                                                                                {!mapPartWrapper[partId].mapDistributorWrapper[distributorId].currentDistributor.Name}
                                                                            </span>
                                                                        </apex:outputText>
                                                                        <apex:outputText rendered="{!!mapPartWrapper[partId].mapDistributorWrapper[distributorId].hasTermsAndCondition}">
                                                                            <span>
                                                                                {!mapPartWrapper[partId].mapDistributorWrapper[distributorId].currentDistributor.Name}
                                                                            </span>
                                                                        </apex:outputText> 
                                                                        <!--<span class="slds-icon_container svgInfo" />-->
                                                                        
                                                                    <!-- </div> -->
                                                                </apex:outputText>
                                                            </td>
                                                            <!-- <td class="slds-text-body_regular slds-text-align_center">
                                                                <apex:outputField value="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.FinalType__c}" />
                                                            </td> --><!--VSU-->

                                                            <!-- Price -->
                                                            <td class="slds-text-body_regular slds-text-align_center">
                                                                <!-- DUN 26/06/2018 C-002236 -->
                                                                <!-- AMI 11/09/17 -->
                                                                <!-- <apex:outputField value="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.CataloguePrice__c}" rendered="{!IF(
                                                                ((mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c == 'CONFIRMED' ||

                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c == 'CONFIRMEDWITHDELAY') &&

                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&

                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == null) ||

                                                                (mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c == null &&

                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == null) ||

                                                                (mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&

                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c != null) ||

                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].crossRefId != null

                                                                ,true,false)}"/>

                                                                <apex:outputText rendered="{!IF(
                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c != 'CONFIRMED' &&

                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c != 'CONFIRMEDWITHDELAY' &&

                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&

                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == null &&

                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].crossRefId == null

                                                                ,true,false)}">
                                                                    {!$Label.NA}
                                                                </apex:outputText> -->
                                                                
                                                                <apex:outputField value="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.CataloguePrice__c}" rendered="{!IF(
                                                                        ((contains(mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.Distributor__r.Tech_OrderNF__c,mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c)) &&
        
                                                                        mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&
        
                                                                        mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == null) ||
        
                                                                        (mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c == null &&
        
                                                                        mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == null) ||
        
                                                                        (mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&
        
                                                                        mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c != null) ||
        
                                                                        mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].crossRefId != null 
        
                                                                        ,true,false)}"/>

                                                                <apex:outputText rendered="{!IF(
                                                                (!contains(mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.Distributor__r.Tech_OrderNF__c,mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c)) &&

                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&

                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == null &&

                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].crossRefId == null

                                                                ,true,false)}">
                                                                    {!$Label.NA}
                                                                </apex:outputText>
                                                            </td>

                                                            <!-- BS and  PRICE WITH DISCOUNT -->
                                                            <!-- DUN 26/06/2018 C-002236 -->
                                                            <!-- AMI 11/09/17 -->
                                                            <!-- <apex:outputText rendered="{!IF(
                                                            ((mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c == 'CONFIRMED' ||

                                                            mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c == 'CONFIRMEDWITHDELAY') &&

                                                            mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&

                                                            mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == null) ||

                                                            mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.Status__c == 'ISSUED' ||

                                                            mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.Status__c == 'RESPONDED' ||

                                                            mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].crossRefId != null

                                                            ,true,false)}"> -->

                                                            <apex:outputText rendered="{!IF(
                                                            ((contains(mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.Distributor__r.Tech_OrderNF__c,mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c)) &&

                                                            mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&

                                                            mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == null) ||

                                                            mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.Status__c == 'ISSUED' ||

                                                            mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.Status__c == 'RESPONDED' ||

                                                            mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].crossRefId != null

                                                            || mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].discount != null

                                                            ,true,false)}">
                                                                <td class="slds-text-align_center slds-text-align_center">
                                                                    <!-- RBE 11/01/2023  PREv2 Connected - Lot 3.3-->
                                                                    <!-- Added render condition to not display the value when the occurence has not yet been selected-->
                                                                    <apex:outputField value="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.Discount__c}" 
                                                                                      rendered="{!!isPREByAlphascale}"/> 
                                                                </td>

                                                                <td class="slds-text-align_center slds-text-align_center">
                                                                    <!-- RBE 11/01/2023  PREv2 Connected - Lot 3.3-->
                                                                    <!-- AMI 11/09/17 -->
                                                                    <apex:outputField value="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.BSTotalPrice__c}"
                                                                    rendered="{!!isPREByAlphascale}"/>
                                                                </td>
                                                            </apex:outputText>

                                                            <!-- AMI 11/09/17 -->
                                                            <!-- DUN 26/06/2018 C-002236 -->
                                                            <!-- <apex:outputText rendered="{!IF(
                                                            (mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c != 'CONFIRMED' &&

                                                            mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c != 'CONFIRMEDWITHDELAY' &&

                                                            mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&

                                                            mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == null) &&

                                                            mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].crossRefId == null

                                                            ,true,false)}"> -->
                                                            <apex:outputText rendered="{!IF(
                                                            ((!contains(mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.Distributor__r.Tech_OrderNF__c,mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c))&&

                                                            mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&

                                                            mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == null) &&

                                                            mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].crossRefId == null

                                                            ,true,false)}">
                                                                <td class="slds-text-align_center slds-text-align_center">
                                                                    {!$Label.NA}
                                                                </td>

                                                                <td class="slds-text-align_center slds-text-align_center">
                                                                    {!$Label.NA}
                                                                </td>
                                                            </apex:outputText>

                                                            <!-- AMI 11/09/17 -->
                                                            <apex:outputText rendered="{!IF(
                                                             ((mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c == null &&

                                                            mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == null) ||

                                                            (mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&

                                                            mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c != null)) &&

                                                            (mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.Status__c == 'DRAFTQUOTE' ||

                                                            mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.Status__c == 'PREDRAFTQUOTE') &&

                                                            mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].crossRefId == null

                                                            &&

                                                            mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].discount == null

                                                            ,true,false)}">
                                                                <td class="slds-text-align_center slds-text-align_center">
                                                                    <!-- //WCH 19/07 C-004762 -->
                                                                    <apex:outputText rendered="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].hasTermsAndCondition && mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.Discount__c<=0}">
                                                                        <span class="slds-text-link slds-text-link_reset" onclick="downloadTermsAndCondition('{!distributorId}', '{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].currentDistributor.Name}');">
                                                                            {!$Label.CFSLA}
                                                                        </span>
                                                                    </apex:outputText>
                                                                    <apex:outputText rendered="{!!mapPartWrapper[partId].mapDistributorWrapper[distributorId].hasTermsAndCondition && mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.Discount__c<=0}">
                                                                        <span>
                                                                            {!$Label.CFSLA}
                                                                        </span>
                                                                    </apex:outputText>
                                                                    <apex:outputField rendered="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.Discount__c>0}" value="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.Discount__c}" />
                                                                </td>
                                                                <!-- DUN 22/02/2018 Changed label -->
                                                                <td class="slds-text-align_center slds-text-align_center">
                                                                    <apex:outputText rendered="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.Discount__c<=0}">
                                                                        <span>
                                                                            {!$Label.CFSLAPriceWithoutDiscount}
                                                                        </span>
                                                                    </apex:outputText>
                                                                    <apex:outputField rendered="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.Discount__c>0}" value="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.BSTotalPrice__c}"/>
                                                                </td>
                                                            </apex:outputText>

                                                            <!-- QUANTITY -->
                                                            <td class="slds-text-body_regular slds-text-align_center">
                                                                <!-- RBE 11/01/2023  PREv2 Connected - Lot 3.3-->
                                                                <!-- added condition to check if connected -->
                                                                <apex:outputText rendered="{!!isSalesOrderInAcceptance && !(mapPartWrapper[partId].currentPart.CrossReferenceId__r.Connected__c && mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PartList__r.Type__c == 'E' )}">
                                                                    <!--DUN 15.09.2017 Quantity Disaled-->
                                                                    <!-- DUN 04/07/2018 case 2652 -->
                                                                    <!-- <apex:outputText rendered="{!IF(
                                                                    mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c != 'CONFIRMED' &&

                                                                    mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c != 'CONFIRMEDWITHDELAY' &&
                                                                    
                                                                    mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&

                                                                    mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == ''

                                                                    ,true,false)}"> -->
                                                                    <apex:outputText rendered="{!IF(
                                                                    (!contains(mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.Distributor__r.Tech_OrderNF__c,mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c)) &&
                                                                    
                                                                    mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&

                                                                    mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == ''

                                                                    ,true,false)}">

                                                                        <input type="text" class="slds-input quantity" disabled="disabled" value="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].quantity}" />
                                                                    </apex:outputText>

                                                                    <!-- <apex:outputText rendered="{!IF(
                                                                    mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c != 'CONFIRMED' &&

                                                                    mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c != 'CONFIRMEDWITHDELAY' &&
                                                                    
                                                                    mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&

                                                                    mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == ''

                                                                    ,false,true)}"> -->
                                                                    <apex:outputText rendered="{!IF(
                                                                    (!contains(mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.Distributor__r.Tech_OrderNF__c,mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c)) &&
                                                                    
                                                                    mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&

                                                                    mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == ''

                                                                    ,false,true)}">

                                                                        <apex:inputText value="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].quantity}" rendered="{!!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].isOfferOriginal}" styleClass="slds-input quantity offerId-{!parentOfferId}" />
                                                                    </apex:outputText>

                                                                    <!-- <apex:inputText value="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].quantity}" rendered="{!!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].isOfferOriginal}" styleClass="slds-input quantity offerId-{!parentOfferId}"
                                                                    /> -->
                                                                </apex:outputText>

                                                                <!-- RBE 11/01/2023  PREv2 Connected - Lot 3.3-->
                                                                <!-- Lock quantity to 1 -->
                                                                <apex:outputText rendered="{!!isSalesOrderInAcceptance && mapPartWrapper[partId].currentPart.CrossReferenceId__r.Connected__c == true}">
                                                                    <input type="text" class="slds-input quantity" disabled="disabled" value="1" />
                                                                </apex:outputText>

                                                                <apex:outputText rendered="{!currentClaimOrderAssessment.OrderOrigin__c == 'Quotation' && mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].hasDeliveryDateAndSuppliable && !mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].isOfferOriginal}">
                                                                    <!--<apex:inputText value="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].quantity}" 
                                                                                    rendered="{!!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].isOfferOriginal}" 
                                                                                    styleClass="slds-input quantity offerId-{!parentOfferId}" />-->
                                                                    <input type="text" class="slds-input quantity" disabled="disabled" value="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].quantity}" />
                                                                </apex:outputText>

                                                                <apex:outputText rendered="{!currentClaimOrderAssessment.OrderOrigin__c == 'Quotation' && !mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].hasDeliveryDateAndSuppliable && !mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].isOfferOriginal}">
                                                                    <input type="text" class="slds-input quantity" disabled="disabled" />
                                                                </apex:outputText>
                                                            </td>

                                                            <!-- DELIVERY (DAYS) -->
                                                            <!-- RBE 11/01/2023  PREv2 Connected - Lot 3.3-->
                                                            <!-- added condition to check if occurence has been selected -->
                                                            <apex:outputText rendered="{!currentClaimOrderAssessment.OrderOrigin__c == 'Order'  && mapPartWrapper[partId].mapDistributorWrapper[distributorId].currentDistributor.Name != 'PRE By AlphaScale'}">
                                                                <!--DUN 29/03/2018 C-002240 : Manage R4 Stock information at Account Level -->
                                                                <td class="slds-text-body_regular slds-text-align_right" rowSpan="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].rowSpan}">
                                                                    <apex:outputText rendered="{!(mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c == null ||

                                                                     mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c == null || 

                                                                     (mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c != null && 

                                                                     mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c != null && 

                                                                     mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].deliveryColor == 'green'))}">

                                                                     <!-- DUN 05/07/2018 C-002652 added condition for not found-->
                                                                        <apex:outputText rendered="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c != 'NOTFOUND'}">
                                                                            <span class="deliveryTruck" delivery-value="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].deliveryValue}" delivery-color="4fba6f" width="45" height="45"/>
                                                                        </apex:outputText>
                                                                        <apex:outputText rendered="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c == 'NOTFOUND'}">
                                                                            <span class="deliveryTruck" delivery-value="" delivery-color="4fba6f" width="45" height="45"/>
                                                                        </apex:outputText>

                                                                    </apex:outputText>
                                                                    <apex:outputText rendered="{!(mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c != null && 

                                                                    mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c != null)}">

                                                                        <apex:outputText rendered="{!(mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].deliveryColor == 'orange')}">
                                                                            <span class="deliveryTruck" delivery-value="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].deliveryValue}" delivery-color="FFAB4A" width="45" height="45"/>
                                                                        </apex:outputText>

                                                                        <apex:outputText rendered="{!(mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].deliveryColor == 'red')}">
                                                                            <span class="deliveryTruckFail" delivery-value="0" width="45" height="45" />
                                                                        </apex:outputText>

                                                                    </apex:outputText>
                                                                </td>
                                                                <td class="slds-text-body_regular slds-text-align_left" rowSpan="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].rowSpan}">
                                                                     <apex:outputText rendered="{!(mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c == null ||

                                                                     mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c == null || 

                                                                     (mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c != null && 

                                                                     mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c != null && 

                                                                     mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].deliveryColor == 'green'))}">

                                                                        <span style="color: #4fba6f;background-color: #4fba6f">
                                                                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                                                        </span>

                                                                    </apex:outputText>
                                                                    <apex:outputText rendered="{!(mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c != null && 

                                                                    mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c != null)}">

                                                                        <apex:outputText rendered="{!(mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].deliveryColor == 'orange')}">
                                                                            <span style="color: #FFAB4A;background-color: #FFAB4A">
                                                                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                                                            </span>
                                                                        </apex:outputText>

                                                                        <apex:outputText rendered="{!(mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].deliveryColor == 'red')}">
                                                                            <span style="color: #f15249;background-color: #f15249">
                                                                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                                                            </span>
                                                                        </apex:outputText>
                                                                        
                                                                    </apex:outputText>
                                                                </td>
                                                            </apex:outputText>
                                                            <!-- RBE 11/01/2023  PREv2 Connected - Lot 3.3-->
                                                            <!-- Delivery days when occurence has not been selected-->
                                                            <apex:outputText rendered="{!currentClaimOrderAssessment.OrderOrigin__c == 'Order'  && mapPartWrapper[partId].mapDistributorWrapper[distributorId].currentDistributor.Name == 'PRE By AlphaScale'}">
                                                                <td class="slds-text-body_regular slds-text-align_right" rowSpan="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].rowSpan}">
                                                                    <span class="deliveryTruck" delivery-value="" delivery-color="C0C0C0" width="45" height="45" />
                                                                </td>
                                                                <td class="slds-text-body_regular slds-text-align_left" rowSpan="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].rowSpan}">
                                                                    <span style="color: #4fba6f;background-color: #4fba6f">
                                                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                                                    </span>
                                                                </td>
                                                            </apex:outputText>

                                                            <apex:outputText rendered="{!!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].hasDeliveryDateAndSuppliable && currentClaimOrderAssessment.OrderOrigin__c == 'Quotation'}">
                                                                <td class="slds-text-body_regular slds-text-align_right" rowSpan="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].rowSpan}">
                                                                    <span class="deliveryTruckFail" delivery-value="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].deliveryValue}" width="45" height="45" />
                                                                </td>
                                                                <td class="slds-text-body_regular slds-text-align_left" rowSpan="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].rowSpan}">
                                                                    <span class="notAvailable">
                                                                        &nbsp;{!$Label.NotAvailable}&nbsp;  
                                                                    </span>
                                                                </td>
                                                            </apex:outputText>

                                                            <apex:outputText rendered="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].hasDeliveryDateAndSuppliable && currentClaimOrderAssessment.OrderOrigin__c == 'Quotation'}">
                                                                <td class="slds-text-body_regular slds-text-align_right" rowSpan="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].rowSpan}">
                                                                    <span class="deliveryTruck" delivery-value="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].deliveryValue}" delivery-color="4fba6f" width="45" height="45" />
                                                                </td>
                                                                <td class="slds-text-body_regular slds-text-align_left" rowSpan="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].rowSpan}">
                                                                    <span class="inStock">
                                                                        &nbsp;{!$Label.InStock}&nbsp;
                                                                    </span>
                                                                </td>
                                                            </apex:outputText>

                                                            <!-- AMI 22/10/2018  C-002781 : Migrate Spain to R4
                                                                                          : Adding possibility to choose cancel reason if :parts is unselected -->
                                                            <!-- SELECT -->
                                                            <td class="slds-text-body_regular slds-text-align_right" rowSpan="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].rowSpan}">
                                                                <!--DUN 15.09.2017 select Disaled--> <!--DUN 29/03/2018 C-002240 : Checkbox available only for status in field Tech_OrderNF__c-->
                                                                <apex:outputtext rendered="{!((currentClaimOrderAssessment.OrderOrigin__c == 'Quotation' && mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].hasDeliveryDateAndSuppliable) || (currentClaimOrderAssessment.OrderOrigin__c == 'Order' && contains(mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.Distributor__r.Tech_OrderNF__c,mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c)))}">
                                                                    <!-- AMI 06/11/18  C-002781 : Migrate Spain to R4 
                                                                                                : Adding new style attibute -->
                                                                    <div class="slds-checkbox_add-button" style="display:inline-block;position: relative;">            
                                    <!-- AMI 06/11/18  
                                    C-002781 : Migrate Spain to R4 
                                             : Adding new attribute distid to be used to display parts ordered summary 
                                             : Adding new attribute hasterm to be used in display parts ordered summary -->

                                                                        <apex:inputCheckbox value="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].isAccepted}" styleclass="slds-assistive-text accpetedCheckbox partId-{!partId} offerid-{!parentOfferId}  distid-{!distributorId} hasTermsAndCond-{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].hasTermsAndCondition} 
                                                                        PRE-{!mapPartWrapper[partId].currentPart.CrossReferenceId__c} {!IF( mapPartWrapper[partId].currentPart.CrossReferenceId__r.Connected__c && mapPartWrapper[partId].mapDistributorWrapper[distributorId].currentDistributor.Name == 'PRE By AlphaScale','PRE-unselected','')}" id="fauxCheckboxId" html-offerId="{!parentOfferId}" html-partNum="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.PartNumber__c}"/>
                                                                        <label class="slds-checkbox_faux" for="{!$Component.fauxCheckboxId}"> <!-- RBE 16/01/2023 PREv2 Connected - Lot 3.3 -->
                                                                        </label>  

                                                                        <span id="cancelreason_{!parentOfferId}" class="cancelReason crstyle" style="{!IF(
                                                                            ((mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].isEligleES &&
                                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].isAccepted) ||
                                                                            !mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].isEligleES),
                                                                            'display:none;',
                                                                            '')}"

                                                                        data-isEligible="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].isEligleES}">

                                                                            {!$ObjectType.Offer__c.fields.CancelReason__c.label} : &nbsp;

                                                                            <apex:inputField value="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.CancelReason__c}" styleclass="reason_{!parentOfferId}"/>
                                                                        </span>

                                                                        <span id="dist-{!parentOfferId}-{!distributorId}" style="display:none">
                                                                            {!mapPartWrapper[partId].mapDistributorWrapper[distributorId].currentDistributor.Name}
                                                                        </span>
                                                                    </div>
                                                                </apex:outputtext>
                                                            </td>

                                                            <td class="slds-text-body_regular slds-text-align_left" rowSpan="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].rowSpan}">
                                                                <apex:outputtext rendered="{!!(currentClaimOrderAssessment.OrderOrigin__c == 'Quotation' && !mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].hasDeliveryDateAndSuppliable)}">
                                                                    <apex:outputText rendered="{!mapPartWrapper[partId].isAlreadyOrdered}">
                                                                        <div class="popOverParent">
                                                                            <span class="attentionSVG" />
                                                                            <div class="slds-popover slds-popover_tooltip slds-nubbin_right popOverDiv-right slds-theme_info">
                                                                                <div class="slds-popover__body">
                                                                                    {!$Label.PartAlreadyOrdered}
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </apex:outputText>
                                                                </apex:outputText>
                                                                
                                                            </td>
                                                        </tr>

                                                        <apex:outputtext rendered="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].isOfferAlternative}">
                                                            <tr class="rowId-{!parentOfferId}">
                                                                <td class="alternative"></td>
                                                                <td class="slds-text-body_regular">
                                                                    {!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.PartNUmber__c}
                                                                </td>
                                                                <td class="slds-text-body_regular slds-cell-wrap slds-truncate">
                                                                    <span title="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.Description__c}">
                                                                        {!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.Description__c}
                                                                    </span>
                                                                </td>
                                                                <td class="slds-text-body_regular">
                                                                    <!--DUN 10/01/2018  C-002135 agency Mode V2--> 
                                                                    <apex:outputText rendered="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.AgencyMode__c}">
                                                                         <span class="popOver">
                                                                                <apex:image url="{!$Resource.AgencyLogo}" styleclass="agencyLogo"/>        
                                                                            <div class="slds-popover slds-popover_tooltip slds-nubbin_left popOverDiv-left" style="top: 21%; left: 31%; background: rgb(57, 137, 201);"
                                                                                role="tooltip">
                                                                                <div class="slds-popover__body">
                                                                                    {!$Label.AgencyDistributor}
                                                                                </div>
                                                                            </div>
                                                                        </span>  
                                                                     </apex:outputText>
                                                                        <apex:outputText rendered="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].hasTermsAndCondition}">
                                                                            <span class="slds-text-link slds-text-link_reset" onclick="downloadTermsAndCondition('{!distributorId}', '{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].currentDistributor.Name}');">
                                                                                {!mapPartWrapper[partId].mapDistributorWrapper[distributorId].currentDistributor.Name}
                                                                            </span>
                                                                        </apex:outputText>
                                                                        <apex:outputText rendered="{!!mapPartWrapper[partId].mapDistributorWrapper[distributorId].hasTermsAndCondition}">
                                                                            <span>
                                                                                {!mapPartWrapper[partId].mapDistributorWrapper[distributorId].currentDistributor.Name}
                                                                            </span>
                                                                        </apex:outputText>
                                                                </td>
                                                            
                                                                <!-- price -->
                                                                <td class="slds-text-body_regular slds-text-align_center">
                                                                    <!-- AMI 11/09/17 -->
                                                                    <!-- DUN 26/06/2018 C-002236 -->
                                                                    <!-- <apex:outputField value="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.CataloguePrice__c}" rendered="{!IF(
                                                                    ((mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c == 'CONFIRMED' ||

                                                                    mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c == 'CONFIRMEDWITHDELAY') &&

                                                                    mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&

                                                                    mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == null) ||

                                                                    (mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c == null &&

                                                                    mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == null) ||

                                                                    (mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&

                                                                    mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c != null) ||

                                                                    mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].crossRefId != null

                                                                    ,true,false)}"/>

                                                                    <apex:outputText rendered="{!IF(
                                                                    mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c != 'CONFIRMED' &&

                                                                    mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c != 'CONFIRMEDWITHDELAY' &&

                                                                    mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&

                                                                    mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == null &&

                                                                    mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].crossRefId == null

                                                                    ,true,false)}">
                                                                        {!$Label.NA}
                                                                    </apex:outputText> -->

                                                                    <apex:outputField value="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.CataloguePrice__c}" rendered="{!IF(
                                                                    ((contains(mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.Distributor__r.Tech_OrderNF__c,mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c)) &&

                                                                    mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&

                                                                    mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == null) ||

                                                                    (mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c == null &&

                                                                    mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == null) ||

                                                                    (mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&

                                                                    mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c != null) ||

                                                                    mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].crossRefId != null

                                                                    ,true,false)}"/>

                                                                    <apex:outputText rendered="{!IF(
                                                                    (!contains(mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.Distributor__r.Tech_OrderNF__c,mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c)) &&

                                                                    mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&

                                                                    mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == null &&

                                                                    mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].crossRefId == null

                                                                    ,true,false)}">
                                                                        {!$Label.NA}
                                                                    </apex:outputText>
                                                                </td>

                                                                <!-- BS and  PRICE WITH DISCOUNT -->
                                                                <!-- DUN 26/06/2018 C-002236 -->
                                                                <!-- AMI 11/09/17 -->
                                                                <!-- <apex:outputText rendered="{!IF(
                                                                ((mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c == 'CONFIRMED' ||

                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c == 'CONFIRMEDWITHDELAY') &&

                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&

                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == null) ||

                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.Status__c == 'ISSUED' ||

                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.Status__c == 'RESPONDED' ||

                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].crossRefId != null

                                                                ,true,false)}"> -->
                                                                <apex:outputText rendered="{!IF(
                                                                ((contains(mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.Distributor__r.Tech_OrderNF__c,mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c)) &&

                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&

                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == null) ||

                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.Status__c == 'ISSUED' ||

                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.Status__c == 'RESPONDED' ||

                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].crossRefId != null

                                                                ,true,false)}">

                                                                    <td class="slds-text-align_center slds-text-align_center">
                                                                        <apex:outputField value="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.Discount__c}" />
                                                                    </td>

                                                                    <td class="slds-text-align_center slds-text-align_center">
                                                                        <!-- AMI 11/09/17 -->
                                                                        <apex:outputField value="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.BSTotalPrice__c}"/>
                                                                    </td>
                                                                </apex:outputText>

                                                                <!-- AMI 11/09/17 -->
                                                                <!-- DUN 26/06/2018 C-002236 -->
                                                                <!-- <apex:outputText rendered="{!IF(
                                                                (mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c != 'CONFIRMED' &&

                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c != 'CONFIRMEDWITHDELAY' &&

                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&

                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == null)

                                                                &&

                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].crossRefId == null

                                                                ,true,false)}"> -->
                                                                <apex:outputText rendered="{!IF(
                                                                ((!contains(mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.Distributor__r.Tech_OrderNF__c,mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.SASStatus__c)) &&

                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&

                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == null)

                                                                &&

                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].crossRefId == null

                                                                ,true,false)}">
                                                                    <td class="slds-text-align_center slds-text-align_center">
                                                                        {!$Label.NA}
                                                                    </td>

                                                                    <td class="slds-text-align_center slds-text-align_center">
                                                                        {!$Label.NA}
                                                                    </td>
                                                                </apex:outputText>

                                                                <!-- AMI 11/09/17 -->
                                                                <apex:outputText rendered="{!IF(
                                                                 ((mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c == null &&

                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == null) ||

                                                                (mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&

                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c != null)) &&

                                                                (mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.Status__c == 'DRAFTQUOTE' ||

                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OrderLine__r.PurchaseOrder__r.Status__c == 'PREDRAFTQUOTE') &&

                                                                mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].crossRefId == null

                                                                ,true,false)}">
                                                                    <td class="slds-text-align_center slds-text-align_center">
                                                                        <!-- //WCH 19/07 C-004762 -->
                                                                        <apex:outputText rendered="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].hasTermsAndCondition && mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.Discount__c<=0}">
                                                                            <span class="slds-text-link slds-text-link_reset" onclick="downloadTermsAndCondition('{!distributorId}', '{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].currentDistributor.Name}');">
                                                                                {!$Label.CFSLA}
                                                                            </span>
                                                                        </apex:outputText>
                                                                        <apex:outputText rendered="{!!mapPartWrapper[partId].mapDistributorWrapper[distributorId].hasTermsAndCondition && mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.Discount__c<=0}">
                                                                            <span>
                                                                                {!$Label.CFSLA}
                                                                            </span>
                                                                        </apex:outputText>
                                                                        <apex:outputField rendered="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.Discount__c>0}" value="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.Discount__c}" />
                                                                    </td>
                                                                    <!-- DUN 22/02/2018 Changed label -->
                                                                    <td class="slds-text-align_center slds-text-align_center">
                                                                        <apex:outputText rendered="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.Discount__c<=0}">
                                                                            <span>
                                                                                {!$Label.CFSLAPriceWithoutDiscount}
                                                                            </span>
                                                                        </apex:outputText>
                                                                        <apex:outputField rendered="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.Discount__c>0}" value="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.BSTotalPrice__c}"/>
                                                                    </td>
                                                                </apex:outputText>

                                                                <td class="slds-text-body_regular slds-text-align_center">
                                                                    <apex:outputText rendered="{!!isSalesOrderInAcceptance}">
                                                                        <apex:inputText value="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].quantity}" styleClass="slds-input quantity offerId-{!parentOfferId}" />
                                                                    </apex:outputText>

                                                                    <apex:outputText rendered="{!currentClaimOrderAssessment.OrderOrigin__c == 'Quotation' && mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].hasDeliveryDateAndSuppliable}">
                                                                        <input type="text" class="slds-input quantity" disabled="disabled" value="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].quantity}" />
                                                                    </apex:outputText>

                                                                    <apex:outputText rendered="{!currentClaimOrderAssessment.OrderOrigin__c == 'Quotation' && !mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].hasDeliveryDateAndSuppliable}">
                                                                        <input type="text" class="slds-input quantity" disabled="disabled" />
                                                                    </apex:outputText>
                                                                </td>
                                                            </tr>
                                                        </apex:outputtext>

                                                        <apex:repeat var="bundleItemWrapper" value="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].childOfferList}">
                                                            <tr class="rowId-{!parentOfferId}">
                                                                <td class="bundle"></td>
                                                                <td class="slds-text-body_regular">
                                                                    {!bundleItemWrapper.bundleItem.PartNUmber__c}
                                                                </td>
                                                                <td class="slds-text-body_regular slds-cell-wrap slds-truncate">
                                                                    {!bundleItemWrapper.bundleItem.Description__c}
                                                                </td>
                                                                <td class="slds-text-body_regular">
                                                                    <!-- <div class="popOverParent"> -->
                                                                    <!--DUN 10/01/2018  C-002135 agency Mode V2-->  
                                                                    <apex:outputText rendered="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.AgencyMode__c}">
                                                                         <span class="popOver">
                                                                                <apex:image url="{!$Resource.AgencyLogo}" styleclass="agencyLogo"/>        
                                                                            <div class="slds-popover slds-popover_tooltip slds-nubbin_left popOverDiv-left" style="top: 21%; left: 50px; background: rgb(57, 137, 201);"
                                                                                role="tooltip">
                                                                                <div class="slds-popover__body">
                                                                                    {!$Label.AgencyDistributor}
                                                                                </div>
                                                                            </div>
                                                                        </span>  
                                                                    </apex:outputText>
                                                                        <apex:outputText rendered="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].hasTermsAndCondition}">
                                                                            <span class="slds-text-link slds-text-link_reset" onclick="downloadTermsAndCondition('{!distributorId}', '{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].currentDistributor.Name}');">
                                                                                {!mapPartWrapper[partId].mapDistributorWrapper[distributorId].currentDistributor.Name}
                                                                            </span>
                                                                        </apex:outputText>
                                                                        <apex:outputText rendered="{!!mapPartWrapper[partId].mapDistributorWrapper[distributorId].hasTermsAndCondition}">
                                                                            <span>
                                                                                {!mapPartWrapper[partId].mapDistributorWrapper[distributorId].currentDistributor.Name}
                                                                            </span>
                                                                        </apex:outputText>
                                                                </td>

                                                                <!-- price -->
                                                                <td class="slds-text-body_regular slds-text-align_center">
                                                                    <!-- AMI 11/09/17 -->
                                                                    <!-- DUN 26/06/2018 C-002236 -->
                                                                    <!-- <apex:outputField value="{!bundleItemWrapper.bundleItem.CataloguePrice__c}" rendered="{!IF(
                                                                    ((bundleItemWrapper.bundleItem.OrderLine__r.SASStatus__c == 'CONFIRMED' ||

                                                                    bundleItemWrapper.bundleItem.OrderLine__r.SASStatus__c == 'CONFIRMEDWITHDELAY') &&

                                                                    bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&

                                                                    bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == null) ||

                                                                    (bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.wsDate__c == null &&

                                                                    bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == null) ||

                                                                    (bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&

                                                                    bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c != null)

                                                                    ,true,false)}"/>

                                                                    <apex:outputText rendered="{!IF(
                                                                    bundleItemWrapper.bundleItem.OrderLine__r.SASStatus__c != 'CONFIRMED' &&

                                                                    bundleItemWrapper.bundleItem.OrderLine__r.SASStatus__c != 'CONFIRMEDWITHDELAY' &&

                                                                    bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&

                                                                    bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == null

                                                                    ,true,false)}">
                                                                        {!$Label.NA}
                                                                    </apex:outputText> -->

                                                                    <apex:outputField value="{!bundleItemWrapper.bundleItem.CataloguePrice__c}" rendered="{!IF(
                                                                    ((contains(bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.Distributor__r.Tech_OrderNF__c,bundleItemWrapper.bundleItem.OrderLine__r.SASStatus__c)) &&

                                                                    bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&

                                                                    bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == null) ||

                                                                    (bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.wsDate__c == null &&

                                                                    bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == null) ||

                                                                    (bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&

                                                                    bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c != null)

                                                                    ,true,false)}"/>

                                                                    <apex:outputText rendered="{!IF(
                                                                    !(contains(bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.Distributor__r.Tech_OrderNF__c,bundleItemWrapper.bundleItem.OrderLine__r.SASStatus__c)) &&

                                                                    bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&

                                                                    bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == null

                                                                    ,true,false)}">
                                                                        {!$Label.NA}
                                                                    </apex:outputText>
                                                                </td>

                                                                <!-- BS and  PRICE WITH DISCOUNT -->
                                                                <!-- AMI 11/09/17 -->
                                                                <!-- DUN 26/06/2018 C-002236 -->
                                                                <!-- <apex:outputText rendered="{!IF(
                                                                ((bundleItemWrapper.bundleItem.OrderLine__r.SASStatus__c == 'CONFIRMED' ||

                                                                bundleItemWrapper.bundleItem.OrderLine__r.SASStatus__c == 'CONFIRMEDWITHDELAY') &&

                                                                bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&

                                                                bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == null) ||

                                                                bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.Status__c == 'ISSUED' ||

                                                                bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.Status__c == 'RESPONDED' ||

                                                                bundleItemWrapper.bundleItem.OrderLine__r.PartList__r.CrossReferenceId__c != null

                                                                ,true,false)}"> -->
                                                                <apex:outputText rendered="{!IF(
                                                                ((contains(bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.Distributor__r.Tech_OrderNF__c,bundleItemWrapper.bundleItem.OrderLine__r.SASStatus__c)) &&

                                                                bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&

                                                                bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == null) ||

                                                                bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.Status__c == 'ISSUED' ||

                                                                bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.Status__c == 'RESPONDED' ||

                                                                bundleItemWrapper.bundleItem.OrderLine__r.PartList__r.CrossReferenceId__c != null

                                                                ,true,false)}">
                                                                    <td class="slds-text-align_center slds-text-align_center">
                                                                        <apex:outputField value="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.Discount__c}" />
                                                                    </td>

                                                                    <td class="slds-text-align_center slds-text-align_center">
                                                                        <!-- AMI 11/09/17 -->
                                                                        <apex:outputField value="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.BSTotalPrice__c}"/>
                                                                    </td>
                                                                </apex:outputText>

                                                                <!-- AMI 11/09/17 -->
                                                                <!-- DUN 26/06/2018 C-002236 -->
                                                                <!-- <apex:outputText rendered="{!IF(
                                                                (bundleItemWrapper.bundleItem.OrderLine__r.SASStatus__c != 'CONFIRMED' &&

                                                                bundleItemWrapper.bundleItem.OrderLine__r.SASStatus__c != 'CONFIRMEDWITHDELAY' &&

                                                                bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&

                                                                bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == null)

                                                                ,true,false)}"> -->
                                                                <apex:outputText rendered="{!IF(
                                                                ((!contains(bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.Distributor__r.Tech_OrderNF__c,bundleItemWrapper.bundleItem.OrderLine__r.SASStatus__c)) &&

                                                                bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&

                                                                bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == null)

                                                                ,true,false)}">
                                                                    <td class="slds-text-align_center slds-text-align_center">
                                                                        {!$Label.NA}
                                                                    </td>

                                                                    <td class="slds-text-align_center slds-text-align_center">
                                                                        {!$Label.NA}
                                                                    </td>
                                                                </apex:outputText>

                                                                <!-- AMI 11/09/17 -->
                                                                <apex:outputText rendered="{!IF(
                                                                 ((bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.wsDate__c == null &&

                                                                bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c == null) ||

                                                                (bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.wsDate__c != null &&

                                                                bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.wsErrorMessage__c != null)) &&

                                                                (bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.Status__c == 'DRAFTQUOTE' ||

                                                                 bundleItemWrapper.bundleItem.OrderLine__r.PurchaseOrder__r.Status__c == 'PREDRAFTQUOTE') &&

                                                                 bundleItemWrapper.bundleItem.OrderLine__r.PartList__r.CrossReferenceId__c == null

                                                                ,true,false)}">
                                                                    <td class="slds-text-align_center slds-text-align_center">
                                                                        <!-- //WCH 19/07 C-004762 -->
                                                                        <apex:outputText rendered="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].hasTermsAndCondition && mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.Discount__c<=0}">
                                                                            <span class="slds-text-link slds-text-link_reset" onclick="downloadTermsAndCondition('{!distributorId}', '{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].currentDistributor.Name}');">
                                                                                {!$Label.CFSLA}
                                                                            </span>
                                                                        </apex:outputText>
                                                                        <apex:outputText rendered="{!!mapPartWrapper[partId].mapDistributorWrapper[distributorId].hasTermsAndCondition && mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.Discount__c<=0}}">
                                                                            <span>
                                                                                {!$Label.CFSLA}
                                                                            </span>
                                                                        </apex:outputText>
                                                                        <apex:outputField rendered="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.Discount__c>0}}" value="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.Discount__c}" />
                                                                    </td>
                                                                    <!-- DUN 22/02/2018 Changed label -->
                                                                    <td class="slds-text-align_center slds-text-align_center">
                                                                        <apex:outputText rendered="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.Discount__c<=0}">
                                                                            <span>
                                                                                {!$Label.CFSLAPriceWithoutDiscount}
                                                                            </span>
                                                                        </apex:outputText>
                                                                        <apex:outputField rendered="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.Discount__c>0}" value="{!mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.BSTotalPrice__c}"/>
                                                                    </td>
                                                                </apex:outputText>

                                                                <td class="slds-text-body_regular slds-text-align_center">
                                                                    <apex:outputText rendered="{!!isSalesOrderInAcceptance}">
                                                                        <apex:inputText value="{!bundleItemWrapper.quantity}" styleClass="slds-input quantity offerId-{!parentOfferId}" />
                                                                    </apex:outputText>

                                                                    <apex:outputText rendered="{!currentClaimOrderAssessment.OrderOrigin__c == 'Quotation' && mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].hasDeliveryDateAndSuppliable}">
                                                                        <input type="text" class="slds-input quantity" disabled="disabled" value="{!bundleItemWrapper.quantity}" />
                                                                    </apex:outputText>

                                                                    <apex:outputText rendered="{!currentClaimOrderAssessment.OrderOrigin__c == 'Quotation' && !mapPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].hasDeliveryDateAndSuppliable}">
                                                                        <input type="text" class="slds-input quantity" disabled="disabled" />
                                                                    </apex:outputText>
                                                                </td>
                                                            </tr>
                                                        </apex:repeat>
                                                    </apex:outputText>
                                                </apex:repeat>
                                            </apex:repeat>
                                        </apex:repeat>                                    
                                    </tbody>
                                </table>
                            </div>
                            <div class="slds-card__footer">
                                <h2 class="slds-text-heading_small"><span id="noOfSelectedParts">{!noOfSelectedParts}</span> {!$Label.PartSelected} {!noOfParts} {!$Label.Parts}</h2>   
                            </div>
                        </div>
                    </apex:outputText>
                </div>
                <!-- WCH 22/06/2022 C-004697 -->
                <div class="slds-grid {!IF(isMultiAddress,'','slds-hide')}">
                    <div class="slds-p-around_medium slds-size--1-of-2 slds-col--padded">

                    </div>
                    <div class="slds-p-around_medium slds-size--1-of-2 slds-col--padded">
                        <div class="slds-card">
                            <div class="slds-card__header">
                                <h2 class="slds-text-heading_small">{!$Label.selectRepairCenter}</h2>
                            </div>
                            <div class="slds-card__body">
                                <apex:outputText Id="MARepairCenter">
                                    <div class="slds-grid">
                                        <div class="slds-p-around_medium slds-size--2-of-3 slds-col--padded">
                                            <apex:selectlist value="{!repairCenterCodeChosen}" label="Select Repair Center" size="1" styleclass="slds-select">
                                                <apex:selectoptions value="{!lstMultiaddressRepairCenter}" />
                                            </apex:selectlist>
                                        </div>
                                        <div class="slds-p-around_medium slds-size--1-of-3 slds-col--padded">
                                            <button type="button" id= "searchMABtn" class="searchMABtn slds-button slds-button_brand" onclick="getAddressDeLivraison();">{!$Label.searchMultiAddress}</button>
                                        </div>
                                    </div>
                                </apex:outputText>
                                <apex:outputText >
                                    <div class="slds-grid">
                                        <div class="slds-p-around_medium slds-size--2-of-3 slds-col--padded">
                                            {!$Label.theRepairCenter}
                                            <div class="slds-form-element">
                                                <div class="slds-form-element__control">
                                                    <apex:inputText id="contactChosen" styleclass="slds-input" disabled="true" value="{!contactChosen}" style="width:100%"/>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="slds-p-around_medium slds-size--1-of-3 slds-col--padded"></div>
                                    </div>
                                </apex:outputText>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- Already ordered offers -->
                <div class="slds-grid">
                    <div class="slds-p-around_medium slds-size--1-of-2 slds-col--padded">
                        <apex:outputText rendered="{!hasAlreadyOrderedOffers}">
                            <div class="slds-card">
                                <div class="slds-card__header">
                                    <h2 class="slds-text-heading_small">{!$Label.AlreadyOrdered}</h2>
                                </div>
                                <div class="slds-card__body">
                                    <table class="slds-table slds-table_bordered">
                                        <thead>
                                            <tr>
                                                <th colspan="2" class="slds-text-heading_label ">
                                                    {!$ObjectType.PartList__c.fields.PartNumber__c.label}
                                                </th>
                                                <th class="slds-text-heading_label slds-text-align_left slds-cell-wrap slds-truncate">
                                                    {!$ObjectType.PartList__c.fields.Description__c.label}
                                                </th>
                                                <th class="slds-text-heading_label slds-text-align_center slds-cell-wrap slds-truncate">
                                                    {!$ObjectType.PurchaseOrder__c.fields.DistributorName__c.label}
                                                </th>
                                                <th class="slds-text-heading_label slds-text-align_center slds-cell-wrap slds-truncate">
                                                    {!$ObjectType.PartList__c.fields.Quantity__c.label}
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody class="hoverParentAndChild">
                                            <apex:repeat value="{!mapAlreadyOrderedPartWrapper}" var="partId">
                                                <apex:repeat value="{!mapAlreadyOrderedPartWrapper[partId].mapDistributorWrapper}" var="distributorId">
                                                    <apex:repeat value="{!mapAlreadyOrderedPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper}" var="parentOfferId">
                                                        <apex:outputText rendered="{!mapAlreadyOrderedPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].isAccepted}">
                                                            <tr class="rowId-{!parentOfferId}">
                                                                <td colspan="2" class="slds-text-body_regular">
                                                                    <apex:outputtext rendered="{!!mapAlreadyOrderedPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].isOfferOriginal}">
                                                                        {!mapAlreadyOrderedPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.PartNUmber__c}
                                                                    </apex:outputtext>
                                                                    <apex:outputtext rendered="{!mapAlreadyOrderedPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].isOfferOriginal}">
                                                                        {!mapAlreadyOrderedPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OriginalPartNumber__c}
                                                                    </apex:outputtext>
                                                                </td>
                                                                <td class="slds-text-body_regular slds-cell-wrap slds-truncate">
                                                                    <apex:outputtext rendered="{!!mapAlreadyOrderedPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].isOfferOriginal}">
                                                                        <span title="{!mapAlreadyOrderedPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.Description__c}">
                                                                                {!mapAlreadyOrderedPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.Description__c}
                                                                            </span>
                                                                    </apex:outputtext>
                                                                    <apex:outputtext rendered="{!mapAlreadyOrderedPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].isOfferOriginal}">
                                                                        <span title="{!mapAlreadyOrderedPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OriginalDescription__c}">
                                                                                {!mapAlreadyOrderedPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.OriginalDescription__c}
                                                                            </span>
                                                                    </apex:outputtext>
                                                                </td>
                                                                <td class="slds-text-body_regular slds-text-align_center" rowSpan="{!mapAlreadyOrderedPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].rowSpan}">
                                                                    {!mapAlreadyOrderedPartWrapper[partId].mapDistributorWrapper[distributorId].currentDistributor.Name}
                                                                </td>
                                                                <td class="slds-text-body_regular slds-text-align_center">
                                                                    <apex:outputText value="{!mapAlreadyOrderedPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].quantity}" rendered="{!!mapAlreadyOrderedPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].isOfferOriginal}"
                                                                    />
                                                                </td>
                                                            </tr>

                                                            <apex:outputtext rendered="{!mapAlreadyOrderedPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].isOfferAlternative}">
                                                                <tr class="rowId-{!parentOfferId}">
                                                                    <td class="alternative"></td>
                                                                    <td class="slds-text-body_regular">
                                                                        {!mapAlreadyOrderedPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.PartNUmber__c}
                                                                    </td>
                                                                    <td class="slds-text-body_regular slds-cell-wrap slds-truncate">
                                                                        <span title="{!mapAlreadyOrderedPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.Description__c}">
                                                                            {!mapAlreadyOrderedPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].parentOffer.Description__c}
                                                                        </span>
                                                                    </td>
                                                                    <td class="slds-text-body_regular slds-text-align_center">
                                                                        <apex:outputText value="{!mapAlreadyOrderedPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].quantity}" />
                                                                    </td>
                                                                </tr>
                                                            </apex:outputtext>

                                                            <apex:repeat var="bundleItemWrapper" value="{!mapAlreadyOrderedPartWrapper[partId].mapDistributorWrapper[distributorId].mapOfferWrapper[parentOfferId].childOfferList}">
                                                                <tr class="rowId-{!parentOfferId}">
                                                                    <td class="bundle"></td>
                                                                    <td class="slds-text-body_regular">
                                                                        {!bundleItemWrapper.bundleItem.PartNUmber__c}
                                                                    </td>
                                                                    <td class="slds-text-body_regular slds-cell-wrap slds-truncate">
                                                                        {!bundleItemWrapper.bundleItem.Description__c}
                                                                    </td>
                                                                    <td class="slds-text-body_regular slds-text-align_center">
                                                                        <apex:outputText value="{!bundleItemWrapper.quantity}" />
                                                                    </td>
                                                                </tr>
                                                            </apex:repeat>
                                                        </apex:outputText>
                                                    </apex:repeat>
                                                </apex:repeat>
                                            </apex:repeat>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </apex:outputText>
                    </div>

                    <div class="slds-p-around_medium slds-size--1-of-2 slds-col--padded">
                        <div class="slds-card">
                            <div class="slds-card__header">
                                <h2 class="slds-text-heading_small">{!$Label.DeliveryInformation}</h2>
                            </div>
                            <div class="slds-card__body">
                                <table class="slds-table">
                                    <apex:outputText rendered="{!isAgencyMode}">
                                        <tr>
                                            <td class="slds-text-align_center">
                                                <apex:image url="{!$Resource.AgencyLogo}" styleclass="agencyLogoSection"/>
                                            </td>
                                            <td>
                                                <apex:outputText value="{!$Label.AssessmentAgencyMode}"/>
                                            </td>
                                        </tr>
                                    </apex:outputText>
                                    <!-- AMI 29/01/19  C-002781 : Payment Type Should Not Be Displayed In ES
                                                                : Adding country code check -->
                                    <apex:outputText rendered="{!IF(currentClaimAssessment.TECH_EntityCountryCode__c == countryCode,false,true)}">
                                        <tr>
                                            <td class="slds-text-align_center">
                                                <span class="payMethodIcon">
                                                    <!-- <svg aria-hidden="true" class="slds-icon--small slds-icon-text-default">
                                                        <use xlink:href="{!URLFOR($Resource.slds, "assets/icons/utility-sprite/svg/symbols.svg#package_org")}"></use>
                                                    </svg> -->
                                                </span>
                                            </td>
                                            <td>
                                                <div class="slds-form-element">
                                                    {!$Label.PaymentMethod} :&nbsp;
                                                    <apex:outputText rendered="{!currentClaimOrderAssessment.Compensated__c}">
                                                        {!$Label.Compensated}
                                                    </apex:outputText>
                                                    <apex:outputText rendered="{!!currentClaimOrderAssessment.Compensated__c}">
                                                        {!$Label.DirectDebit}
                                                    </apex:outputText>
                                                </div>
                                            </td>
                                        </tr>
                                    </apex:outputText>
                                    <!--<apex:outputText rendered="{!currentClaimAssessment.TECH_EntityCountryCode__c!='IT'}">-->
                                    <apex:outputText rendered="{!displayBodyshopOrderNumber}">
                                        <tr>
                                            <td class="slds-text-align_center">
                                                <span class="bsONumberIcon">
                                                    <!-- <svg aria-hidden="true" class="slds-icon--small slds-icon-text-default">
                                                        <use xlink:href="{!URLFOR($Resource.slds, "/assets/icons/utility-sprite/svg/symbols.svg#edit_form")}"></use>
                                                    </svg> -->
                                                </span>
                                            </td>
                                            <td>
                                                <div class="slds-form-element">
                                                    <div class="slds-form-element__control">
                                                        <apex:inputText id="bodyShopOrderNumber" html-placeholder="{!$ObjectType.PurchaseOrder__c.fields.BodyShopOrderNumber__c.label}" styleclass="slds-input" value="{!bodyShopOrderNumber}" style="width:40%"/>
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    </apex:outputText> 
                                    <tr>
                                        <td class="slds-text-align_center">
                                            <span class="commentIcon slds-icon_container">
                                                <!-- <svg aria-hidden="true" class="slds-icon--small slds-icon-text-default">
                                                    <use xlink:href="{!URLFOR($Resource.slds, "/assets/icons/utility-sprite/svg/symbols.svg#quick_text")}"></use>
                                                </svg> -->
                                            </span>
                                        </td>
                                        <td>
                                            <div class="slds-form-element">
                                                <div class="slds-form-element__control">
                                                    <apex:inputTextarea styleclass="slds-textarea commentfield slds-cell-wrap slds-truncate" html-placeholder="{!$Label.Comment}... ({!$Label.CommentWarning})" value="{!assessmentComment}" />
                                                </div>
                                            </div>
                                        </td>
                                    </tr> 
                                    <!-- BodyShop address -->
                                    <apex:outputText rendered="{!accountSelectOptionList.size > 1}">
                                        <tr>
                                            <td class="slds-text-align_center">
                                                <span class="addressIcon slds-icon_container">
                                                    <!-- <svg aria-hidden="true" class="slds-icon--small slds-icon-text-default">
                                                        <use xlink:href="{!URLFOR($Resource.slds, "/assets/icons/utility-sprite/svg/symbols.svg#quick_text")}"></use>
                                                    </svg> -->
                                                </span>
                                            </td>
                                            <td>
                                                <div class="slds-form-element">
                                                    <div class="slds-form-element__control">
                                                        <table width="500px">
                                                            <tr>
                                                                <td width="20%">
                                                                    {!$Label.BodyShopToDeliver}&nbsp; 
                                                                </td>
                                                                <td rowspan="2" style="vertical-align: top; width: 285px;">
                                                                    <apex:selectlist value="{!currentClaimOrderAssessment.BodyShop__c}" size="1" styleclass="slds-select" onchange="changeSelectedBodyShop();">
                                                                        <apex:selectoptions value="{!accountSelectOptionList}" />
                                                                    </apex:selectlist>
                                                                </td>
                                                            </tr>
                                                            <tr>
                                                                <td>
                                                                    <apex:outputPanel id="selectedBodyShopAddress">
                                                                        {!mapIdAccount[currentClaimOrderAssessment.BodyShop__c].ShippingStreet} <br/>
                                                                        {!mapIdAccount[currentClaimOrderAssessment.BodyShop__c].ShippingCity}, {!mapIdAccount[currentClaimOrderAssessment.BodyShop__c].ShippingState} {!mapIdAccount[currentClaimOrderAssessment.BodyShop__c].ShippingPostalCode} <br/>
                                                                        {!mapIdAccount[currentClaimOrderAssessment.BodyShop__c].ShippingCountry} <br/>
                                                                    </apex:outputPanel>
                                                                </td>
                                                                <td></td>
                                                            </tr>
                                                        </table>
                                                    </div>
                                                </div>
                                            </td>
                                        </tr> 
                                    </apex:outputText>
                                    <apex:outputText rendered="{!isShippingEligible}">
                                        <tr>
                                            <td class="slds-text-align_center">
                                                <span class="ShippingCostIcon">
                                                    <!-- <svg aria-hidden="true" class="slds-icon--large slds-icon-text-default">
                                                        <use xlink:href="{!URLFOR($Resource.slds, "/assets/icons/standard-sprite/svg/symbols.svg#shipment")}"></use>
                                                    </svg> -->
                                                </span>
                                            </td>
                                            <td>
                                                <apex:outputText value="{!shippingLabel}"  style="width:40%"/>
                                            </td>
                                        </tr>
                                    </apex:outputText>
                                </table>
                            </div>
                            <div class="slds-card__footer">
                                <div class="slds-grid">
                                    <div class="slds-size--1-of-2" style="text-align: left">
                                        <apex:commandbutton action="{!back}" value="{!$Label.Back}" styleclass="searchDateButton slds-button slds-button_brand" rerender="OrderMakeSelectionFrm" status="statusSpinner"/>
                                    </div>
                                    <div class="slds-size--1-of-2">
                                        <button type="button" id= "orderBtn" class="searchDateButton slds-button slds-button_brand" onclick="callOrder();">{!$Label.Order}</button>
                                    </div>
                                </div>
                                
                            </div>
                        </div>
                    </div>
                </div>
                <div id="spinner" class="slds-spinner_container hide positionFixed" style="z-index : 20000000;">
                    <div class="slds-spinner slds-spinner_large" aria-hidden="false" role="alert">
                        <div class="slds-spinner__dot-a"></div>
                        <div class="slds-spinner__dot-b"></div>
                    </div>
                </div>
                <apex:actionstatus onstart="$j('#spinner').show();" onstop="$j('#spinner').hide();" id="statusSpinner" />

                <!-- Error Manager -->
                <apex:outputPanel id="errorMessage">
                    <div id="toastMessage" class="slds-notify_container slds-hide">
                        <div class="slds-notify slds-notify_toast slds-theme_error slds-grid_align-center" role="alert">
                            <button class="slds-button slds-notify__close slds-button_icon-inverse" title="{!$Label.Close}" type="button" onclick="hideError();">
                                </button>
                            <div class="slds-notify__content">
                                <p class="slds-text-align_center customErrorMsg"></p>
                                <apex:pagemessages id="toastErrorMessage" escape="false" />
                            </div>
                        </div>
                    </div>

                    <div id="errorModal" class="slds-modal slds-modal_prompt" aria-hidden="false" role="dialog">
                        <div class="slds-modal__container">
                            <div class="slds-modal__header slds-theme_error slds-theme_alert-texture">
                                <h2 class="slds-text-heading_medium">{!$Label.ErrorModalHeader}</h2>
                            </div>
                            <div class="slds-modal__content slds-p-around_medium">
                                <p class="slds-m-bottom_medium">
                                    {!$Label.ErrorModalBody}
                                </p>
                                <apex:pagemessages escape="false" />
                            </div>
                            <div class="slds-modal__footer slds-theme_default">
                                <!--<input type="button" class="slds-button slds-button_destructive" value="{!$Label.Close}" onclick="hideError();" />-->
                                <apex:outputText rendered="{!!redirectionInErrorModal}">
                                    <input type="button"
                                        class="slds-button slds-button_destructive"
                                        value="{!$Label.Close}"
                                        onclick="hideError();" />
                                </apex:outputText>
                                <apex:outputText rendered="{!redirectionInErrorModal}">
                                    <apex:commandButton action="{!redirectPage}" 
                                                        value="{!$Label.ModalOK}" 
                                                        styleClass="slds-button slds-button_destructive"
                                                        reRender="OrderMakeSelectionFrm" 
                                                        status="statusSpinner"/>
                                </apex:outputText>
                            </div>
                        </div>
                    </div>
                    <div id="errorModalBackdrop" class="slds-backdrop"></div>
                </apex:outputPanel>
                
            </div>

            <apex:actionfunction name="order" action="{!order}" rerender="OrderMakeSelectionFrm" status="statusSpinner" />

            <apex:actionfunction name="respond" action="{!respond}" rerender="OrderMakeSelectionFrm" status="statusSpinner" />

            <apex:actionfunction name="loadResult" action="{!queryRecords}" rerender="OrderMakeSelectionFrm" status="statusSpinner" />

            <apex:actionfunction name="changeSelectedBodyShop" rerender="selectedBodyShopAddress" status="statusSpinner" />

            <!-- WCH 22/06/2022 C-004697 -->
            <apex:actionfunction name="getAddressDeLivraison" action="{!getAddressDeLivraison}" rerender="OrderMakeSelectionFrm" status="statusSpinner" oncomplete="showMultiAddress();"/>
            <apex:actionfunction name="setAddressDeLivraison" action="{!setAddressDeLivraison}" rerender="multiadress,contactChosen" status="statusSpinner" oncomplete="respondMA();"/>
            <apex:actionfunction name="selectThisMA" action="{!checkAddressDeLivraison}" rerender="multiadress">
                <apex:param name="contactId" assignTo="{!contactIdChosen}" value="" />
            </apex:actionFunction>

            <!-- WCH 28/01/2019 C-002963 - Select/Unselect ALL on R4 Order page -->
            <apex:actionfunction name="toggleAllParts" action="{!toggleIsAcceptedForAllParts}" rerender="OrderMakeSelectionFrm" status="statusSpinner" oncomplete="setToggleValue();">
                <apex:param name="theToggleJVvalue" assignTo="{!toggleValue}" value="" />
            </apex:actionFunction>
            
            <!-- WCH 28/01/2019 C-003677 - SO CANCELATION BUTTON BS -->
            <apex:actionfunction name="cancelCurrentSO" action="{!cancelCurrentSO}" rerender="OrderMakeSelectionFrm" status="statusSpinner" oncomplete="exitCancelReason();"/>
           <apex:actionfunction name="getTargetedSO" action="{!getTargetedSO}" rerender="OrderMakeSelectionFrm" status="statusSpinner" oncomplete="showCancelReason();"/>

            <!-- RBE 06/01/2023 PREv2 Connected - Lot 3.5 - Order - Display Occurence Page -->
           
             <!-- RBE 13/01/2023 -->
           <apex:actionfunction name="selectOcc" action="{!selectOcc}" rerender="OrderMakeSelectionFrm" status="statusSpinner">
                <apex:param name="occIdParam" assignTo="{!selectedOccId}" value=""/>
            </apex:actionFunction>


            <script>
                if (typeof jQuery != "undefined") {
                    $j = jQuery.noConflict();
                }

                var hasAlreadyRun = '{!hasAlreadyRun}';

                //AMI 04/09/17 - SAS Integration
                //call distributor to update stock and status info
                $j(document).ready(function(){
                    //show spinner until distributor integration does not finish
                    $j('#spinner').show();

                    var childIdParam = '{!$CurrentPage.parameters.ChildId}';
                    console.log('## hasAlreadyRun',hasAlreadyRun);

                    if(hasAlreadyRun == 'false'){ 
                        OrderMakeSelection.updateStockInfo(childIdParam,function(result,event){
                            if(event.status){
                                //console.log('result ',$j('<div/>').html(result).text());
                                loadResult();
                            }
                        },false); 
                    }

                    /*WCH 28/01/2019 C-002963 - Select/Unselect ALL on R4 Order page*/
                    $j('#toggleAllSelects').change(function() {
                    
                        var checked = $j(this).is(":checked");
                        console.log('checked>>',checked);
                        //console.log('>>{!numberOfPartList}');
                        if (checked) {
                            toggleAllParts(true);
                        }else{
                            toggleAllParts(false);
                        }

                    });
                    var noOfAcceptedOffers = 0;
                    $j(".accpetedCheckbox").each(function(index, element) {
                        if ($j(element).is(":checked")) {
                            noOfAcceptedOffers++;
                        }
                    });
                    if(noOfAcceptedOffers=='{!numberOfPartList}'){
                        $j("#toggleAllSelects").val(true);$j('#toggleAllSelects').prop("checked", true);
                    }else{
                        $j("#toggleAllSelects").val(false);$j('#toggleAllSelects').prop("checked", false);
                    }


                });
                /*WCH 28/01/2019 C-002963 - Select/Unselect ALL on R4 Order page*/
                function setToggleValue(){
                    if('{!toggleValue}'=='true'){
                        $j('#toggleAllSelects').prop("checked", true);
                    }else{
                        $j('#toggleAllSelects').prop("checked", false);
                    }
                }
                
                var headerHeight = $j('.fixedHeader').height();
                $j('#topCard').css('padding-top',headerHeight+5);

                renderIcons();
                setButtonLocking();

                $j(".info").hover(
                    function() {
                        showPopOver(this, true);
                    },
                    function() {
                        hidePopOver(this);
                    }
                );

                $j(".attentionSVG").hover(
                    function() {
                        showPopOver(this, false);
                    },
                    function() {
                        hidePopOver(this);
                    }
                );

                function showPopOver(el, isInlineTable) {
                    if (isInlineTable) {
                        $j(el).next().css("display", "table");
                    } else {
                        $j(el).next().show();
                    }
                }

                function hidePopOver(el) {
                    $j(el).next().hide();
                }

                $j(".agencyLogo").hover
                (
                    function()
                    {
                        showPopOver(this, false);
                    },
                    function()
                    {
                        hidePopOver(this);
                    }
                );

                //AMI 22/10/2018  C-002781 : Migrate Spain to R4
                //                         : Adding possibility to choose cancel reason if parts is unselected
                //                         : toggle cancel reason
                $j(".accpetedCheckbox").change(function() {
                    var checked = $j(this).is(":checked");
                    var partId = $j(this).prop("class").match(/partId-(\w+|\s|$)/)[0];

                    $j("." + partId).prop("checked", false);

                    //toggle cancel reason
                    var attrOfferid = $j(this).prop("class").match(/offerid-(\w+|\s|$)/)[0];
                    var offID = attrOfferid.split('-')[1];
                    var isEligible = $j("#cancelreason_" + offID).data('iseligible');

                    if (checked) {
                        $j(this).prop("checked", true);

                        if(isEligible){
                            $j("#cancelreason_" + offID).hide();
                        }
                    }else{
                        if(isEligible){
                            $j("#cancelreason_" + offID).show();
                        }
                    }

                    // loop in the accepted checkbox to set the number of selected parts
                    calculateNumberOfSelectedParts();
                });

                function calculateNumberOfSelectedParts() {
                    var noOfAcceptedOffers = 0;

                    $j(".accpetedCheckbox").each(function(index, element) {
                        if ($j(element).is(":checked")) {
                            noOfAcceptedOffers++;
                        }
                    });

                    $j("#noOfSelectedParts").html(noOfAcceptedOffers);

                    /*WCH 28/01/2019 C-002963 - Select/Unselect ALL on R4 Order page*/
                    if(noOfAcceptedOffers=='{!numberOfPartList}'){
                        $j("#toggleAllSelects").val(true);$j('#toggleAllSelects').prop("checked", true);
                    }else{
                        $j("#toggleAllSelects").val(false);$j('#toggleAllSelects').prop("checked", false);
                    }

                }

                function callOrder() {
                    clearError();
                    if (verifySelected()) {
                        //AMI 06/11/18 C-002781 : Migrate Spain to R4
                        //                      : Display Recap of Parts Ordered For Spain Only
                        //                      : rendered on order btn moved here (was causing errors when it was in the verifyselected method)
                        $j('#orderBtn').prop("disabled",true);
                        if ("{!currentClaimOrderAssessment.OrderOrigin__c}" == "Order") {

                            //WCH 13/12/2018 C-002958 - MultiSourcing Belgium - Large choice of distributors for Bodyshops
                            if("{!currentClaimAssessment.TECH_EntityCountryCode__c}" == "{!countryCodeBE}"){
                                displayPartsSummary();

                                //                      : show recap modal on start
                                $j('#orderRecap').removeClass('slds-hide');
                                document.getElementById('focusNode').focus();
                            }else{
                                console.log('order is executed');
                                order();
                            }

                        } else if ("{!currentClaimOrderAssessment.OrderOrigin__c}" == "Quotation") {
                            console.log('respond is executed');
                            respond();
                        }
                    }
                }
                //AMI 06/11/18 C-002781 : Migrate Spain to R4
                //                      : Display Recap of Parts Ordered For Spain Only
                //                      : function to close recap + enable order btn
                function exitRecap(){
                    //enable order btn
                    $j('#orderBtn').prop("disabled",false);

                    //close modal
                    $j('#orderRecap').addClass('slds-hide');
                }
                //WCH 22/06/2022 C-004697
                function exitMultiAddress(){
                    //enable order btn
                    $j('#respMABtn').prop("disabled",false);

                    //close modal
                    $j('#multiadress').addClass('slds-hide');
                }
                function showMultiAddress(){
                    $j('#multiadress').removeClass('slds-hide');
                    document.getElementById('focusNodeMultiaddress').focus();
                }
                //WCH 08/04/2020 C-003677
                function exitCancelReason(){
                    //enable order btn
                    //$j('#orderBtn').prop("disabled",false);

                    //close modal
                    $j('#cancellationReason').addClass('slds-hide');
                }
                function saveCancelReason(){
                    //enable order btn
                    $j('#saveCancelReasonBtn').prop("disabled",false);

                    //close modal
                    $j('#cancellationReason').addClass('slds-hide');
                    
                    //save SO
                    cancelCurrentSO();
                }
                $j("#CancelSOButtonForBS").click(function(){
                    getTargetedSO();
                });
                function showCancelReason(){
                    $j('#cancellationReason').removeClass('slds-hide');
                    document.getElementById('focusNodeCancelReason').focus();
                }

                //AMI 06/11/18 C-002781 : Migrate Spain to R4
                //                      : Display Recap of Parts Ordered For Spain Only
                //                      : function to respond
                function respondOrder(){
                    //enable order btn
                    $j('#respBtn').prop("disabled",false);

                    //close modal
                    $j('#orderRecap').addClass('slds-hide');
                    
                    //respond on order
                    order();
                }
                //WCH 22/06/2022 C-004697 
                function respondMA(){
                    //enable order btn
                    $j('#respMABtn').prop("disabled",false);

                    //close modal
                    $j('#multiadress').addClass('slds-hide');
                }
                
                //AMI 06/11/18 C-002781 : Migrate Spain to R4
                //                      : Display Recap of Parts Ordered For Spain Only
                //                      : function to calculate summary
                function displayPartsSummary(){
                    //clear table first
                    $j('#modal-content-id-1').empty(); 

                    partsOrderedSummary = new Map();
                    distAndHasTerm = new Map();
                    distAndDistName = new Map();

                    //build partsOrderedSummary
                    $j(".accpetedCheckbox").each(function(index, element) {
                        if ($j(element).is(":checked")) {
                            //console.log('distOfferidAttribute>>',$j(this).prop("class").match(/distid-(\w+|\s|$)/));
                            var distOfferidAttribute = $j(this).prop("class").match(/distid-(\w+|\s|$)/)[0];
                            //var hastermAttribute  = $j(this).prop("class").match(/hasTermsAndCond-(\w+|\s|$)/)[0];
                            // console.log('offeridAttribute>>',$j(this).prop("class").match(/distid-(\w+|\s|$)/));
                            var offeridAttribute = $j(this).prop("class").match(/offerid-(\w+|\s|$)/)[0];

                            var distOfferid = distOfferidAttribute.split('-')[1];
                            //var hasterm = hastermAttribute.split('-')[1];
                            var currentofferid = offeridAttribute.split('-')[1];
                            var selectorDist = '#dist-' + currentofferid + '-' + distOfferid;

                            //build partsOrderedSummary
                            if(partsOrderedSummary.has(distOfferid)){
                                var tempCount = partsOrderedSummary.get(distOfferid);
                                partsOrderedSummary.set(distOfferid,(tempCount + 1));
                            }else{
                                partsOrderedSummary.set(distOfferid,1);
                            }

                            //build distAndHasTerm
                            /*if(!distAndHasTerm.has(distOfferid)){
                                distAndHasTerm.set(distOfferid,hasterm);
                            }*/

                            //build distAndDistName
                            if(!distAndDistName.has(distOfferid)){
                                distAndDistName.set(distOfferid,$j(selectorDist).html());
                            }
                        }
                    });

                    //construct table
                    var content  = '';
                        
                    //start table header
                    content      =  '<table id="tableSummary" class="slds-table slds-table_bordered slds-table_fixed-layout">';
                    content     += '<thead>';
                    content     += '<tr>';
                    
                    content     += '<th class="slds-text-heading_label slds-text-align_center slds-truncate slds-cell-wrap" scope="col" ><strong><span>';
                    content     += '{!$Label.Distributor}';
                    content     += '</span><strong></th>';

                    content     += '<th class="slds-text-heading_label slds-text-align_center slds-truncate slds-cell-wrap" scope="col" ><strong><span>';
                    content     += '{!$Label.popUpTableHeader2}';
                    content     += '</span><strong></th>';
                    
                    content     += '</tr>';
                    content     += '</thead>';

                    //start table body
                    content += '<tbody>';

                    if(partsOrderedSummary.size > 0){
                        partsOrderedSummary.forEach(function(value,key){
                            content += '<tr>';

                            content += '<td  class="slds-text-body_regular slds-text-align_center slds-truncate slds-cell-wrap" scope="row">';
                            content += distAndDistName.get(key);
                            content += '</td>';

                            content += '<td  class="slds-text-body_regular slds-text-align_center slds-truncate slds-cell-wrap" scope="row">';
                            content += value; 
                            content += '</td>';

                            /*if(distAndHasTerm.get(key) == 'true'){
                                content += '<td  class="slds-text-body_regular slds-text-align_center slds-truncate slds-cell-wrap" scope="row" style="cursor:pointer">';
                                
                                content +=  '<span class="slds-icon_container slds-icon_container_circle slds-icon-action-download" onclick="downloadTermsAndCondition(\'' + key + '\',\'' + distAndDistName.get(key) + '\');">';
                                content +=  '<svg aria-hidden="true" class="slds-icon">';
                                content +=  '<use xlink:href="{!URLFOR($Asset.SLDS, "assets/icons/action-sprite/svg/symbols.svg#download")}"></use>';
                                content +=  '</svg>';
                                content +=  '</span>';

                                content += '</td>';
                            }else{
                                content += '<td  class="slds-text-body_regular slds-text-align_center slds-truncate slds-cell-wrap" scope="row">';
                                
                                content +=  '<span class="slds-icon_container slds-icon_container_circle slds-icon-action-close">';
                                content +=  '<svg aria-hidden="true" class="slds-icon">';
                                content +=  '<use xlink:href="{!URLFOR($Asset.SLDS, "assets/icons/action-sprite/svg/symbols.svg#close")}"></use>';
                                content +=  '</svg>';
                                content +=  '</span>';

                                content += '</td>';
                            }*/

                            content += '<tr>';
                        });
                    }
                    
                    content += '</tbody>';
                    content += '</table>';

                    $j('#modal-content-id-1').append(content);
                }
                //AMI 22/10/2018  C-002781 : Migrate Spain to R4
                //                         : Adding possibility to choose cancel reason if parts is unselected
                //                         : cancel reason mandatory if part is unselected for spain 
                function verifySelected() {
                    var isValid = true;
                    var verifyUnselectedParts = true;
                    
                    if($j('.cancelReason').is(':visible')){

                        verifyUnselectedParts = false;

                        $j(".accpetedCheckbox:not(:checked)").each(function(index, element) {
                            var parentOfferId = 'reason_' + $j(element).attr("offerId");
                            var selector = '[class$=' + parentOfferId + ']';

                            if(!$j(selector).val()){
                                isValid = false;
                                return false; 
                            }
                        });

                        //show error
                        if(!isValid){
                            $j(".customErrorMsg").html("{!JSENCODE($Label.CancelReason)}");
                            showError(true, true);
                        }
                    }

                    //if ok, proceed with next check
                    if(isValid){
                        if ($j(".accpetedCheckbox").is(":checked")) {
                            $j(".accpetedCheckbox:checked").each(function(index, element) {
                                var parentOfferId = $j(element).attr("offerId");

                                $j(".quantity.offerId-" + parentOfferId).each(function(index, element) {
                                    if (!$j(element).val() || $j(element).val() <= 0 || $j(element).val() > 99) {
                                        isValid = false;
                                        $j(element).parent().addClass("slds-has-error");
                                    }
                                });

                                if (!isValid) {
                                    $j(".customErrorMsg").html("{!JSENCODE($Label.QuantityError)}");
                                    showError(true, true);
                                }

                                //RBE 16/01/2023 Lot 3.3                               
                                if($j(element).hasClass('PRE-unselected')){
                                    isValid = false;
                                    $j(".customErrorMsg").html("Aucune offre n'a été sélectionnée pour la pièce :"+$j(element).attr("partNum")+", veuillez sélectionner une offre.");
                                    showError(true, true);
                                }
                            });
                        }else{
                            if(verifyUnselectedParts){
                                isValid = false;
                                $j(".customErrorMsg").html("{!JSENCODE($Label.SelectOnePart)}");
                                showError(true, true);
                            }
                        } 
                    }

                    if (isValid) {
                        if (!$j("[id$='bodyShopOrderNumber']").val() && '{!currentClaimAssessment.TECH_EntityCountryCode__c}' == 'FR') {
                            isValid = false;
                            $j("[id$='bodyShopOrderNumber']").parent().addClass("slds-has-error");
                            $j(".customErrorMsg").html("{!JSENCODE($Label.InputBSNumber)}");

                            showError(true, true);
                        } 
                        if ($j('.commentfield').length > 0 && $j('.commentfield').val().length > 255) {
                            isValid = false;
                            $j(".commentfield").parent().addClass("slds-has-error");
                            $j(".customErrorMsg").html("{!JSENCODE($Label.CommentErrorMsg)}");
                            showError(true, true);
                        } 
                        if($j("[id$='bodyShopOrderNumber']").length > 0 && $j("[id$='bodyShopOrderNumber']").val().length > 255){
                            isValid = false;
                            $j("[id$='bodyShopOrderNumber']").parent().addClass("slds-has-error");
                            $j(".customErrorMsg").html("{!JSENCODE($Label.BodyshopNumberMsg)}");
                            showError(true, true);
                        }
                    }
                    

                    if(isValid){
                       $j('#orderBtn').click(function(){
                            $j('#orderBtn').prop("disabled",true);
                       });
                    }
                    return isValid;
                }

                function clearError() {
                    $j("[id$='bodyShopOrderNumber']").parent().removeClass("slds-has-error");
                    $j(".quantity").parent().removeClass("slds-has-error");
                    $j(".commentfield").parent().removeClass("slds-has-error");
                }

                $j(".hoverParentAndChild tr").hover(
                    function() {
                        if ($j(this).prop("class")) {
                            var rowId = $j(this).prop("class").match(/rowId-(\w+|\s|$)/)[0];

                            $j("." + rowId).addClass("customHover");
                        }
                    },
                    function() {
                        if ($j(this).prop("class")) {
                            var rowId = $j(this).prop("class").match(/rowId-(\w+|\s|$)/)[0];

                            $j("." + rowId).removeClass("customHover");
                        }
                    }
                );

                function downloadTermsAndCondition(distributorId, distributorName)
                {
                    OrderMakeSelection.getTermsAndCondtions(distributorId, function(result, event)
                    {
                        if(event.status)
                        {
                            //console.log('result', result);
                            var blobData = b64toBlob(result, "application/pdf");
                            //var blob = new Blob([result], {type: "application/pdf"});
                            saveAs(blobData, distributorName + ".pdf");
                        }
                        else
                        {
                            alert('Sorry...could not retrieve the Terms And Condition of that distributor');
                        }
                    });
                }

                function b64toBlob(b64Data, contentType, sliceSize) {
                    contentType = contentType || '';
                    sliceSize = sliceSize || 512;

                    var byteCharacters = atob(b64Data);
                    var byteArrays = [];

                    for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {
                        var slice = byteCharacters.slice(offset, offset + sliceSize);

                        var byteNumbers = new Array(slice.length);
                        for (var i = 0; i < slice.length; i++) {
                            byteNumbers[i] = slice.charCodeAt(i);
                        }

                        var byteArray = new Uint8Array(byteNumbers);

                        byteArrays.push(byteArray);
                    }
                        
                    var blob = new Blob(byteArrays, {type: contentType});
                    return blob;
                }

                showError({!hasErrors
                }, {!isToastError
                });
                checkPageMessage({!hasErrors
                });

                //RBE 04/01/2023 PREv2 Connected - Lot 3.5 - Order - Display Occurence Page C-004899
                //Displays and hides the occurence list modal
                let occurenceListVisible = false;
                let callerRow; // Used to scroll back to the part
                function toggleOccurenceListModal(){
                    const occList = $j('[id$=occurenceList]');        
                    //Auto check previously selected occurence  
                    checkOccurenceCheckBox(selectedOccurence,null);
                    //	C-004898: PREv2 Connected - Lot 3.4 - Order - Stock Call For Occurence
                    if('{!occErrorMessage}' != ''){
                        $j(".customErrorMsg").html("{!occErrorMessage}");
                        showError(true, true);
                        return;
                    }

                    if(occList.hasClass('slds-hide')){    
                        occList.removeClass('slds-hide').addClass('slds-show');
                        //scroll to modal
                        $j('html, body').animate({
                        scrollTop: occList.offset().top
                        }, 1000);
                    }else{
                        occList.removeClass('slds-show').addClass('slds-hide');
                        //change to scroll to row 
                        $j('html, body').animate({
                            // scrollTop: $j(callerRow).offset().top
                        }, 1000);                  
                    }                    
                    //occurenceListVisible = !occurenceListVisible;
                }


                //RBE 04/01/2023 PREv2 Connected - Lot 3.6 - Order - Occurrence Additional Information C-004900
                //Displays and hides the additional details modal
                let occurenceDetailVisible = false;
                function toggleOccurenceDetailModal(){         
                    if(!occurenceDetailVisible){             
                        //hide occurence list modal              
                        $j('[id$=occurenceList]').removeClass('slds-show').addClass('slds-hide');
                        $j('[id$=occurenceDetails]').removeClass('slds-hide').addClass('slds-show');                        
                    }else{
                        $j('[id$=occurenceDetails]').removeClass('slds-show').addClass('slds-hide');    
                        //show occurence list modal  
                        $j('[id$=occurenceList]').removeClass('slds-hide').addClass('slds-show');
                        occurenceListVisible = true ;
                    }
                    occurenceDetailVisible = !occurenceDetailVisible;
                }

                //RBE 04/01/2023 PREv2 Connected - Lot 3.5
                //Deselects all other occurences and selects the current one
                function checkOccurenceCheckBox(occId, xrefId){
                    $j('#btnOccurenceSelect').prop('disabled',false);
                    $j(".occCheckbox-"+xrefId).prop("checked", false);
                    $j("#occ-"+occId+" input:checkbox").prop("checked", true);                    
                    selectedOccurence = occId;
                }
                
                //RBE 13/01/2023 PREv2 Connected - Lot 3.7
                let selectedOccurence; //stores the occurence id temporarily on the client side
                //Call the Apex controller method to select the occurence
                function selectOccurence(xrefId){
                    console.log('xref: '+xrefId);
                    console.log('occurence: '+selectedOccurence); 
                    $j('#btnOccurenceSelect').prop('disabled',true);

                    // occPartId = $j('.PRE-'+xrefId).attr('partId');
                    // occDistId = $j('.PRE-'+xrefId).attr('distId');
                    // occOfferId = $j('.PRE-'+xrefId).attr('offerId');
                    
                    selectOcc(selectedOccurence);
                    $j('.PRE-'+xrefId).removeClass('PRE-unselected');
                }

               //RBE 04/01/2023 PREv2 Connected - Lot 3.6 - Order - Occurrence Additional Information C-004900
               // when an image in the additional details modal is clicked, make it the main image
               $j('.occurence-image').click(function(event){
                   //console.log($j(event.target).attr("src"));
                   $j('.occurence-image').removeClass("slds-box")
                   $j(this).addClass("slds-box")
                   $j("#main-occurence-image img").attr("src",$j(event.target).attr("src"));
               }); 

                //RBE 05/01/2023 PREv2 Connected - Lot 3.6 - Order - Occurrence Additional Information C-004900
                //Changes the opacity of the image when hovering on it
                $j('.occurence-image').hover(
                    function(){
                        if(!$j(this).hasClass("slds-box")){
                            $j( this ).animate({
                                opacity: 0.25
                            })
                        }
                    },
                    function(){ 
                        $j( this ).animate({
                            opacity: 1
                        })
                    }
                );
                
                //RBE 06/01/2023
                //Opens the modal for the fullscreen image in the occurence additional information
                let fullscreenImageVisible = false
                $j("#main-occurence-image").click(function(){
                    $j('body').css('overflow','hidden');
                    $j("#fullscreen-image img").attr("src", $j("#main-occurence-image img").attr("src"));
                    if(!fullscreenImageVisible){
                        $j('[id$=occurenceDetails]').removeClass('slds-show').addClass('slds-hide');
                        $j('#fullscreen-modal').removeClass('slds-hide').addClass('slds-show');
                        fullscreenImageVisible = true;
                    }
                });

                 //Changes the cursor to a magnifying glass
                 $j("[id$=main-occurence-image]").hover(function(){
                    $j(this).css('cursor','zoom-in');
                });

                //Opens the modal for the fullscreen image in the occurence additional information
                $j('#btnCloseFullscreen').click(function(){
                    $j('body').css('overflow','initial');
                    if(fullscreenImageVisible){
                      $j('[id$=occurenceDetails]').removeClass('slds-hide').addClass('slds-show');
                      $j('#fullscreen-modal').removeClass('slds-show').addClass('slds-hide');
                      fullscreenImageVisible = false;
                    }
                });
                $j('#btnCloseFullscreen').hover(function(){
                    $j(this).css('cursor','pointer')
                });

               

                //RBE 06/01/2023 
                // Zooms in and out of the fullscreen image
                $j('#fullscreen-image img').on('mousewheel', function(e){
                    const image = $j("#fullscreen-image img");

                    const maxHeight = $j('body').height();
                    const maxWidth = $j('body').width();     
                    
                    const minHeight = $j('body').height()*0.25;
                    const minWidth = $j('body').width()*0.25;                    

                    if(fullscreenImageVisible){
                        e.preventDefault();
                        e.stopPropagation();
                        // Scrolling up
                        if(e.originalEvent.wheelDelta > 0) {                           
                            if(image.height() < maxHeight && image.width() < maxWidth){
                                image.height(image.height()+10).width(image.width()+10);
                            }
                        }
                        // Scrolling down
                        else {
                             if(image.height() > minHeight && image.width() > minWidth){                               
                                image.height(image.height()-10).width(image.width()-10);
                            }
                        }
                    }                    
                });

                //RBE 06/01/2023 
                $j('#fullscreen-image img').on('mousedown', function(e){
                    e.preventDefault();                
                    $j(this).css('cursor','grab');
                    $j(this).on('mousemove', function(event){
                        $j(this).css('cursor','grabbing');
                        $j('html,body').stop(false,true).animate({
                            scrollLeft: e.pageX - event.clientX,
                            scrollRight: e.pageX + event.clientX,                           
                            scrollTop: e.pageY - event.clientY
                        });
                    });
                });

                $j('#fullscreen-image img').on('mouseup', function(){
                    $j(this).css('cursor','grab');
                    $j(this).off('mousemove');
                });


                $j("[class*=occCheckbox] [html-checked|=true]").attr('html-checked')
                //RBE
                // function to render svg icons
                // function renderCarSVG() {
                //     if ($j(".carSVG").length > 0) {
                //         let span = $j("<span/>", { 
                //             "class": "slds-icon_container",
                //             "title": "vehicle" 
                //         });

                //         let svgTag = $j("<svg/>", {
                //             "aria-hidden": "true",
                //             "class": "slds-icon slds-icon-text-default"
                //         });

                //         let useTag = $j("<use/>", {
                //             "xlink:href": "{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#travel_and_places')}"
                //         });

                //         $j(".carSVG").html(span.append(svgTag.append(useTag)));
                        
                //         // re render svg
                //         $j(".carSVG").html($j(".carSVG").html());
                //     }
                // }
                function renderCustomSVG(className, href,toolTip,size = "") {
                    if ($j(className).length > 0) {
                        let span = $j("<span/>", { 
                            "class": "slds-icon_container",
                            "title": toolTip
                        });

                        let svgTag = $j("<svg/>", {
                            "aria-hidden": "true",
                            "class": "slds-icon slds-icon-text-default "+ size
                        });

                        let useTag = $j("<use/>", {
                            "xlink:href": href
                        });

                        $j(className).html(span.append(svgTag.append(useTag)));
                        
                        // re render svg
                        $j(className).html($j(className).html());
                    }
                }
                //RBE 20/02/2023
                //fix for function name toggleOccurenceListModal() appearing at bottom of page
                $j('span[id^="org.ajax4jsf.oncomplete"]').css('display','none');
                //renderCarSVG();
                renderCustomSVG(".carSVG","{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#travel_and_places')}","vehicle");
                renderCustomSVG(".meterSVG","{!URLFOR($Asset.SLDS, 'assets/icons/custom-sprite/svg/symbols.svg#custom109')}","kilometers","slds-icon_large");
                renderCustomSVG(".energySVG","{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#fallback')}","energy");
                renderCustomSVG(".doorSVG","{!URLFOR($Asset.SLDS, 'assets/icons/standard-sprite/svg/symbols.svg#outcome')}","doors","slds-icon_large");
                renderCustomSVG(".calendarSVG","{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#event')}","year");
            </script>
        </apex:form>
    </body>

    </html>
</apex:page>